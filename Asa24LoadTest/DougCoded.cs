//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asa24LoadTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using ExperimentalTesting;


    public class DougCoded : WebTest
    {

        private SSLv3ForcedPlugin testPlugin0 = new SSLv3ForcedPlugin();

        private string UserId { get; set; } = "";

        private string RecallId { get; set; } = "";
        public DougCoded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.testPlugin0.Enabled = true;
            this.PreWebTest += new EventHandler<PreWebTestEventArgs>(this.testPlugin0.PreWebTest);
            this.PostWebTest += new EventHandler<PostWebTestEventArgs>(this.testPlugin0.PostWebTest);
            this.PreTransaction += new EventHandler<PreTransactionEventArgs>(this.testPlugin0.PreTransaction);
            this.PostTransaction += new EventHandler<PostTransactionEventArgs>(this.testPlugin0.PostTransaction);
            this.PrePage += new EventHandler<PrePageEventArgs>(this.testPlugin0.PrePage);
            this.PostPage += new EventHandler<PostPageEventArgs>(this.testPlugin0.PostPage);
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }
            this.PreRequestDataBinding += new EventHandler<PreRequestDataBindingEventArgs>(this.testPlugin0.PreRequestDataBinding);
            this.PreRequest += new EventHandler<PreRequestEventArgs>(this.testPlugin0.PreRequest);
            this.PostRequest += new EventHandler<PostRequestEventArgs>(this.testPlugin0.PostRequest);

            WebTestRequest request1 = new WebTestRequest(EnvHelper.GetRootDomain() + "demo");
            request1.ThinkTime = 16;
            request1.ExpectedResponseUrl = EnvHelper.GetRootDomain() + "demo/";
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest(EnvHelper.GetRootDomain() + "ssoservices/auth/anonymous");
            request2.Method = "POST";
            request2.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request2.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request2.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "demo/"));
            request2.QueryStringParameters.Add("format", "json", false, false);
            FormPostHttpBody request2Body = new FormPostHttpBody();
            request2Body.FormPostParameters.Add("Version", "16");
            request2Body.FormPostParameters.Add("Language", "ENG");
            request2.Body = request2Body;
            ExtractText extractionRule1 = new ExtractText();
            extractionRule1.StartsWith = "token=";
            extractionRule1.EndsWith = "\"}";
            extractionRule1.IgnoreCase = false;
            extractionRule1.UseRegularExpression = false;
            extractionRule1.Required = true;
            extractionRule1.ExtractRandomMatch = false;
            extractionRule1.Index = 0;
            extractionRule1.HtmlDecode = true;
            extractionRule1.SearchInHeaders = false;
            extractionRule1.ContextParameterName = "token";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request2;
            request2 = null;

            UserId = JwtHelper.JwtHelper.GetUserNameFromToken(this.Context["token"].ToString());
            
            WebTestRequest request3 = new WebTestRequest("http://fonts.gstatic.com/s/opensans/v14/cJZKeOuBrn4kERxqtaUH3T8E0i7KZn-EPnyo3HZu" +
                    "7kw.woff");
            request3.Headers.Add(new WebTestRequestHeader("Referer", @EnvHelper.GetRootDomain() + "2016/index.html?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJleHAiOiIxNDk3NTczMzE0IiwiaWF0IjoiMTQ5NzUzNzMxNCIsInVzZXIiOiJDQU5ETTE1NzQiLCJ1c2VySWQiOiIzMDhkNGE3OS1jMjRkLTRhZjQtYjNmMy1mNTk3M2UxMzZhYzYiLCJyZWRpcmVjdCI6Imh0dHBzOi8vYXNhMjQubmNpLm5paC5nb3YvIiwicm9sZXMiOiJbXCJSZXNwb25kZW50XCJdIiwic3R1ZHlBY2Nlc3MiOiJbXCJDQU5ETTFcIl0iLCJzdHVkeSI6Ijk4NmU2YmMwLWMxMzQtNDllOS1hNjgzLTQzMzk3ZmJlZThjNyIsInZlcnNpb24iOiIxNiJ9.MqKAGtPbO5kcx0CP3ob5ZLgwvXkTvKMXFq7a3mTVMX_RKjX_HFDfVnZhCHwyt1Td0p8ZcxobPFVT3-uf1XHFfg"));
            request3.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://fonts.gstatic.com/s/opensans/v14/MTP_ySUJH_bn48VBG8sNSnhCUOGz7vYGh680lGh-" +
                    "uXM.woff");
            request4.Headers.Add(new WebTestRequestHeader("Referer", @EnvHelper.GetRootDomain() + "2016/index.html?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJleHAiOiIxNDk3NTczMzE0IiwiaWF0IjoiMTQ5NzUzNzMxNCIsInVzZXIiOiJDQU5ETTE1NzQiLCJ1c2VySWQiOiIzMDhkNGE3OS1jMjRkLTRhZjQtYjNmMy1mNTk3M2UxMzZhYzYiLCJyZWRpcmVjdCI6Imh0dHBzOi8vYXNhMjQubmNpLm5paC5nb3YvIiwicm9sZXMiOiJbXCJSZXNwb25kZW50XCJdIiwic3R1ZHlBY2Nlc3MiOiJbXCJDQU5ETTFcIl0iLCJzdHVkeSI6Ijk4NmU2YmMwLWMxMzQtNDllOS1hNjgzLTQzMzk3ZmJlZThjNyIsInZlcnNpb24iOiIxNiJ9.MqKAGtPbO5kcx0CP3ob5ZLgwvXkTvKMXFq7a3mTVMX_RKjX_HFDfVnZhCHwyt1Td0p8ZcxobPFVT3-uf1XHFfg"));
            request4.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("http://fonts.gstatic.com/s/opensans/v14/xjAJXh38I15wypJXxuGMBobN6UDyHWBl620a-IRf" +
                    "uBk.woff");
            request5.Headers.Add(new WebTestRequestHeader("Referer", @EnvHelper.GetRootDomain() + "2016/index.html?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJleHAiOiIxNDk3NTczMzE0IiwiaWF0IjoiMTQ5NzUzNzMxNCIsInVzZXIiOiJDQU5ETTE1NzQiLCJ1c2VySWQiOiIzMDhkNGE3OS1jMjRkLTRhZjQtYjNmMy1mNTk3M2UxMzZhYzYiLCJyZWRpcmVjdCI6Imh0dHBzOi8vYXNhMjQubmNpLm5paC5nb3YvIiwicm9sZXMiOiJbXCJSZXNwb25kZW50XCJdIiwic3R1ZHlBY2Nlc3MiOiJbXCJDQU5ETTFcIl0iLCJzdHVkeSI6Ijk4NmU2YmMwLWMxMzQtNDllOS1hNjgzLTQzMzk3ZmJlZThjNyIsInZlcnNpb24iOiIxNiJ9.MqKAGtPbO5kcx0CP3ob5ZLgwvXkTvKMXFq7a3mTVMX_RKjX_HFDfVnZhCHwyt1Td0p8ZcxobPFVT3-uf1XHFfg"));
            request5.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest("http://fonts.gstatic.com/s/opensans/v14/PRmiXeptR36kaC0GEAetxn5HxGBcBvicCpTp6spH" +
                    "fNo.woff");
            request6.Headers.Add(new WebTestRequestHeader("Referer", @EnvHelper.GetRootDomain() + "2016/index.html?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJleHAiOiIxNDk3NTczMzE0IiwiaWF0IjoiMTQ5NzUzNzMxNCIsInVzZXIiOiJDQU5ETTE1NzQiLCJ1c2VySWQiOiIzMDhkNGE3OS1jMjRkLTRhZjQtYjNmMy1mNTk3M2UxMzZhYzYiLCJyZWRpcmVjdCI6Imh0dHBzOi8vYXNhMjQubmNpLm5paC5nb3YvIiwicm9sZXMiOiJbXCJSZXNwb25kZW50XCJdIiwic3R1ZHlBY2Nlc3MiOiJbXCJDQU5ETTFcIl0iLCJzdHVkeSI6Ijk4NmU2YmMwLWMxMzQtNDllOS1hNjgzLTQzMzk3ZmJlZThjNyIsInZlcnNpb24iOiIxNiJ9.MqKAGtPbO5kcx0CP3ob5ZLgwvXkTvKMXFq7a3mTVMX_RKjX_HFDfVnZhCHwyt1Td0p8ZcxobPFVT3-uf1XHFfg"));
            request6.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("http://fonts.gstatic.com/s/rokkitt/v11/4Z-2qkHrI1biwaOxvW6ZTA.woff");
            request7.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/jwt"));
            request7.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/auth/jwt");
            request8.Method = "POST";
            request8.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request8.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/jwt"));
            request8.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request8.QueryStringParameters.Add("format", "json", false, false);
            request8.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:35:14-0400", false, false);
            StringHttpBody request8Body = new StringHttpBody();
            request8Body.ContentType = "application/json;charset=utf-8";
            request8Body.InsertByteOrderMark = false;
            request8Body.BodyString = @"{""token"":""" + this.Context["token"].ToString() + @"""}";
            request8.Body = request8Body;
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/assets/favicon.31706bf0d1de32ac.ico");
            request9.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            yield return request9;
            request9 = null;

            WebTestRequest request10 = new WebTestRequest("http://bam.nr-data.net/1/1029e6f06b");
            request10.Encoding = System.Text.Encoding.GetEncoding("iso-8859-1");
            request10.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/jwt"));
            request10.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request10.QueryStringParameters.Add("a", "5482438", false, false);
            request10.QueryStringParameters.Add("sa", "1", false, false);
            request10.QueryStringParameters.Add("pl", "1497537314527", false, false);
            request10.QueryStringParameters.Add("v", "476.c73f3a6", false, false);
            request10.QueryStringParameters.Add("t", "Unnamed%20Transaction", false, false);
            request10.QueryStringParameters.Add("be", "181", false, false);
            request10.QueryStringParameters.Add("fe", "158", false, false);
            request10.QueryStringParameters.Add("dc", "39", false, false);
            request10.QueryStringParameters.Add("f", "%5B%22err%22,%22xhr%22,%22stn%22%5D", false, false);
            request10.QueryStringParameters.Add("perf", @"%7B%22timing%22:%7B%22of%22:1497537314527,%22n%22:0,%22u%22:11,%22ue%22:11,%22dl%22:6,%22di%22:181,%22ds%22:181,%22de%22:215,%22dc%22:334,%22l%22:334,%22le%22:335,%22f%22:0,%22dn%22:0,%22dne%22:0,%22c%22:0,%22ce%22:0,%22rq%22:5,%22rp%22:6,%22rpe%22:6%7D,%22navigation%22:%7B%7D%7D", false, false);
            request10.QueryStringParameters.Add("jsonp", "NREUM.setToken", false, false);
            yield return request10;
            request10 = null;

            WebTestRequest request11 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/preferences/remoteauth");
            request11.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request11.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/jwt"));
            request11.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request11.QueryStringParameters.Add("studyid", "986e6bc0-c134-49e9-a683-43397fbee8c7", false, false);
            request11.QueryStringParameters.Add("language", "undefined", false, false);
            request11.QueryStringParameters.Add("format", "json", false, false);
            request11.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:35:14-0400", false, false);
            ExtractText extractionRule2 = new ExtractText();
            extractionRule2.StartsWith = "activeRecallId\":\"";
            extractionRule2.EndsWith = "\",\"";
            extractionRule2.IgnoreCase = false;
            extractionRule2.UseRegularExpression = false;
            extractionRule2.Required = true;
            extractionRule2.ExtractRandomMatch = false;
            extractionRule2.Index = 0;
            extractionRule2.HtmlDecode = true;
            extractionRule2.SearchInHeaders = false;
            extractionRule2.ContextParameterName = "recallId";
            request11.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            yield return request11;
            request11 = null;

            RecallId = this.Context["recallId"].ToString();

            WebTestRequest request12 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request12.ThinkTime = 8;
            request12.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request12.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/jwt"));
            request12.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request12.QueryStringParameters.Add("format", "json", false, false);
            request12.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:35:15-0400", false, false);
            yield return request12;
            request12 = null;

            WebTestRequest request13 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request13.Method = "POST";
            request13.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request13.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/language"));
            request13.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request13.QueryStringParameters.Add("format", "json", false, false);
            request13.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:35:23-0400", false, false);
            StringHttpBody request13Body = new StringHttpBody();
            request13Body.ContentType = "application/json;charset=utf-8";
            request13Body.InsertByteOrderMark = false;
            request13Body.BodyString = "{\"language\":\"eng\"}";
            request13.Body = request13Body;
            yield return request13;
            request13 = null;

            WebTestRequest request14 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/assets/fonts/glyphicons-halflings-regular.eot");
            request14.ThinkTime = 38;
            request14.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/welcome"));
            request14.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request14.QueryStringParameters.Add("", "", false, false);
            yield return request14;
            request14 = null;

            WebTestRequest request15 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/showtutorial/false");
            request15.Method = "POST";
            request15.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request15.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/tutorials/5"));
            request15.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request15.QueryStringParameters.Add("format", "json", false, false);
            request15.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:01-0400", false, false);
            StringHttpBody request15Body = new StringHttpBody();
            request15Body.ContentType = "";
            request15Body.InsertByteOrderMark = false;
            request15Body.BodyString = "";
            request15.Body = request15Body;
            yield return request15;
            request15 = null;

            WebTestRequest request16 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request16.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request16.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/tutorials/5"));
            request16.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request16.QueryStringParameters.Add("fltType", "undefined", false, false);
            request16.QueryStringParameters.Add("format", "json", false, false);
            request16.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:01-0400", false, false);
            yield return request16;
            request16 = null;

            WebTestRequest request17 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request17.ThinkTime = 5;
            request17.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request17.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/tutorials/5"));
            request17.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request17.QueryStringParameters.Add("format", "json", false, false);
            request17.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:01-0400", false, false);
            yield return request17;
            request17 = null;

            WebTestRequest request18 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request18.ThinkTime = 31;
            request18.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request18.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request18.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request18.QueryStringParameters.Add("format", "json", false, false);
            request18.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:07-0400", false, false);
            yield return request18;
            request18 = null;

            WebTestRequest request19 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "");
            request19.Method = "POST";
            request19.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request19.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request19.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request19.QueryStringParameters.Add("format", "json", false, false);
            request19.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:38-0400", false, false);
            StringHttpBody request19Body = new StringHttpBody();
            request19Body.ContentType = "application/json;charset=utf-8";
            request19Body.InsertByteOrderMark = false;
            request19Body.BodyString = @"{""mealName"":""Breakfast"",""date"":""2017-06-14 04:00:00Z"",""time"":""2017-06-15T13:00:07.000Z"",""eatWithAnyone"":""no"",""location"":""work"",""activity"":""[\""computer\""]"",""ateWith"":""no"",""mealNameError"":false,""dateError"":false,""timeError"":false,""eatWithAnyoneError"":false,""locationError"":false,""activityError"":false,""ateWithError"":false,""mealTime"":""2017-06-14T09:00:00-0400""}";
            request19.Body = request19Body;
            yield return request19;
            request19 = null;

            WebTestRequest request20 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request20.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request20.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request20.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request20.QueryStringParameters.Add("format", "json", false, false);
            request20.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:38-0400", false, false);
            yield return request20;
            request20 = null;

            WebTestRequest request21 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096");
            request21.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request21.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request21.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request21.QueryStringParameters.Add("format", "json", false, false);
            request21.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:38-0400", false, false);
            yield return request21;
            request21 = null;

            WebTestRequest request22 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request22.ThinkTime = 11;
            request22.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request22.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request22.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request22.QueryStringParameters.Add("fltType", "both", false, false);
            request22.QueryStringParameters.Add("format", "json", false, false);
            request22.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:38-0400", false, false);
            yield return request22;
            request22 = null;

            WebTestRequest request23 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request23.ThinkTime = 40;
            request23.Method = "POST";
            request23.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request23.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request23.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request23.QueryStringParameters.Add("format", "json", false, false);
            request23.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:36:49-0400", false, false);
            StringHttpBody request23Body = new StringHttpBody();
            request23Body.ContentType = "application/json;charset=utf-8";
            request23Body.InsertByteOrderMark = false;
            request23Body.BodyString = "{\"search\":\"bagel\",\"fltType\":\"both\"}";
            request23.Body = request23Body;
            yield return request23;
            request23 = null;

            WebTestRequest request24 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request24.ThinkTime = 6;
            request24.Method = "POST";
            request24.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request24.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request24.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request24.QueryStringParameters.Add("format", "json", false, false);
            request24.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:29-0400", false, false);
            StringHttpBody request24Body = new StringHttpBody();
            request24Body.ContentType = "application/json;charset=utf-8";
            request24Body.InsertByteOrderMark = false;
            request24Body.BodyString = "{\"search\":\"mcdonalds\",\"fltType\":\"both\"}";
            request24.Body = request24Body;
            yield return request24;
            request24 = null;

            WebTestRequest request25 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request25.ThinkTime = 5;
            request25.Method = "POST";
            request25.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request25.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request25.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request25.QueryStringParameters.Add("format", "json", false, false);
            request25.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:36-0400", false, false);
            StringHttpBody request25Body = new StringHttpBody();
            request25Body.ContentType = "application/json;charset=utf-8";
            request25Body.InsertByteOrderMark = false;
            request25Body.BodyString = "{\"search\":\"bagel\",\"fltType\":\"both\"}";
            request25.Body = request25Body;
            yield return request25;
            request25 = null;

            WebTestRequest request26 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request26.ThinkTime = 5;
            request26.Method = "POST";
            request26.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request26.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request26.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request26.QueryStringParameters.Add("format", "json", false, false);
            request26.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:40-0400", false, false);
            StringHttpBody request26Body = new StringHttpBody();
            request26Body.ContentType = "application/json;charset=utf-8";
            request26Body.InsertByteOrderMark = false;
            request26Body.BodyString = "{\"term\":\"bagel\",\"fltId\":\"4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727\",\"selectedFacets\":[" +
                "],\"mealId\":\"6a33a2f1-1684-44ba-9ac4-c2bae21e4096\"}";
            request26.Body = request26Body;
            yield return request26;
            request26 = null;

            WebTestRequest request27 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request27.ThinkTime = 5;
            request27.Method = "POST";
            request27.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request27.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request27.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request27.QueryStringParameters.Add("format", "json", false, false);
            request27.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:46-0400", false, false);
            StringHttpBody request27Body = new StringHttpBody();
            request27Body.ContentType = "application/json;charset=utf-8";
            request27Body.InsertByteOrderMark = false;
            request27Body.BodyString = "{\"search\":\"egg\",\"fltType\":\"both\"}";
            request27.Body = request27Body;
            yield return request27;
            request27 = null;

            WebTestRequest request28 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request28.ThinkTime = 4;
            request28.Method = "POST";
            request28.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request28.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request28.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request28.QueryStringParameters.Add("format", "json", false, false);
            request28.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:51-0400", false, false);
            StringHttpBody request28Body = new StringHttpBody();
            request28Body.ContentType = "application/json;charset=utf-8";
            request28Body.InsertByteOrderMark = false;
            request28Body.BodyString = "{\"term\":\"egg\",\"fltId\":\"9f71b457-993d-436f-8485-1711e6e1323c\",\"selectedFacets\":[]," +
                "\"mealId\":\"6a33a2f1-1684-44ba-9ac4-c2bae21e4096\"}";
            request28.Body = request28Body;
            yield return request28;
            request28 = null;

            WebTestRequest request29 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request29.ThinkTime = 22;
            request29.Method = "POST";
            request29.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request29.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request29.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request29.QueryStringParameters.Add("format", "json", false, false);
            request29.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:37:55-0400", false, false);
            StringHttpBody request29Body = new StringHttpBody();
            request29Body.ContentType = "application/json;charset=utf-8";
            request29Body.InsertByteOrderMark = false;
            request29Body.BodyString = "{\"search\":\"cheese\",\"fltType\":\"both\"}";
            request29.Body = request29Body;
            yield return request29;
            request29 = null;

            WebTestRequest request30 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request30.ThinkTime = 8;
            request30.Method = "POST";
            request30.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request30.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request30.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request30.QueryStringParameters.Add("format", "json", false, false);
            request30.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:17-0400", false, false);
            StringHttpBody request30Body = new StringHttpBody();
            request30Body.ContentType = "application/json;charset=utf-8";
            request30Body.InsertByteOrderMark = false;
            request30Body.BodyString = "{\"term\":\"cheese\",\"fltId\":\"28ff1c8e-59b9-446a-8a33-cb02e3c6d172\",\"selectedFacets\":" +
                "[],\"mealId\":\"6a33a2f1-1684-44ba-9ac4-c2bae21e4096\"}";
            request30.Body = request30Body;
            yield return request30;
            request30 = null;

            WebTestRequest request31 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request31.ThinkTime = 5;
            request31.Method = "POST";
            request31.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request31.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request31.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request31.QueryStringParameters.Add("format", "json", false, false);
            request31.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:25-0400", false, false);
            StringHttpBody request31Body = new StringHttpBody();
            request31Body.ContentType = "application/json;charset=utf-8";
            request31Body.InsertByteOrderMark = false;
            request31Body.BodyString = "{\"search\":\"hashbrown\",\"fltType\":\"both\"}";
            request31.Body = request31Body;
            yield return request31;
            request31 = null;

            WebTestRequest request32 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request32.ThinkTime = 3;
            request32.Method = "POST";
            request32.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request32.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request32.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request32.QueryStringParameters.Add("format", "json", false, false);
            request32.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:30-0400", false, false);
            StringHttpBody request32Body = new StringHttpBody();
            request32Body.ContentType = "application/json;charset=utf-8";
            request32Body.InsertByteOrderMark = false;
            request32Body.BodyString = "{\"search\":\"hash\",\"fltType\":\"both\"}";
            request32.Body = request32Body;
            yield return request32;
            request32 = null;

            WebTestRequest request33 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request33.ThinkTime = 8;
            request33.Method = "POST";
            request33.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request33.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request33.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request33.QueryStringParameters.Add("format", "json", false, false);
            request33.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:34-0400", false, false);
            StringHttpBody request33Body = new StringHttpBody();
            request33Body.ContentType = "application/json;charset=utf-8";
            request33Body.InsertByteOrderMark = false;
            request33Body.BodyString = "{\"term\":\"hash\",\"fltId\":\"006e05c2-c00d-451f-9e12-d1d3f0e22e15\",\"selectedFacets\":[]" +
                ",\"mealId\":\"6a33a2f1-1684-44ba-9ac4-c2bae21e4096\"}";
            request33.Body = request33Body;
            yield return request33;
            request33 = null;

            WebTestRequest request34 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods");
            request34.Method = "POST";
            request34.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request34.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request34.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request34.QueryStringParameters.Add("format", "json", false, false);
            request34.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            StringHttpBody request34Body = new StringHttpBody();
            request34Body.ContentType = "application/json;charset=utf-8";
            request34Body.InsertByteOrderMark = false;
            request34Body.BodyString = "{\"fltId\":\"4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727\",\"flt\":\"Bagel\",\"facets\":{\"Breads, " +
                "Cereals, Bakery products & Salty snacks\":[\"Bread, Muffin, Roll, Tortilla\"]},\"ran" +
                "k\":0,\"foodFltId\":\"4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727\"}";
            request34.Body = request34Body;
            yield return request34;
            request34 = null;

            WebTestRequest request35 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods");
            request35.Method = "POST";
            request35.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request35.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request35.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request35.QueryStringParameters.Add("format", "json", false, false);
            request35.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            StringHttpBody request35Body = new StringHttpBody();
            request35Body.ContentType = "application/json;charset=utf-8";
            request35Body.InsertByteOrderMark = false;
            request35Body.BodyString = "{\"fltId\":\"9f71b457-993d-436f-8485-1711e6e1323c\",\"flt\":\"Eggs\",\"facets\":{\"Meat, Pou" +
                "ltry, Fish, Eggs & Nuts\":[\"Eggs\"]},\"rank\":1,\"foodFltId\":\"9f71b457-993d-436f-8485" +
                "-1711e6e1323c\"}";
            request35.Body = request35Body;
            yield return request35;
            request35 = null;

            WebTestRequest request36 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods");
            request36.Method = "POST";
            request36.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request36.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request36.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request36.QueryStringParameters.Add("format", "json", false, false);
            request36.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            StringHttpBody request36Body = new StringHttpBody();
            request36Body.ContentType = "application/json;charset=utf-8";
            request36Body.InsertByteOrderMark = false;
            request36Body.BodyString = "{\"fltId\":\"28ff1c8e-59b9-446a-8a33-cb02e3c6d172\",\"flt\":\"Cheese (other kind)\",\"face" +
                "ts\":{\"Dairy Products \":[\"Cheese\"]},\"rank\":2,\"foodFltId\":\"28ff1c8e-59b9-446a-8a33" +
                "-cb02e3c6d172\"}";
            request36.Body = request36Body;
            yield return request36;
            request36 = null;

            WebTestRequest request37 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods");
            request37.Method = "POST";
            request37.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request37.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request37.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request37.QueryStringParameters.Add("format", "json", false, false);
            request37.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            StringHttpBody request37Body = new StringHttpBody();
            request37Body.ContentType = "application/json;charset=utf-8";
            request37Body.InsertByteOrderMark = false;
            request37Body.BodyString = "{\"fltId\":\"006e05c2-c00d-451f-9e12-d1d3f0e22e15\",\"flt\":\"Hash browns\",\"facets\":{\"Ve" +
                "getables, Beans & Salad\":[\"Vegetable\"]},\"rank\":3,\"foodFltId\":\"006e05c2-c00d-451f" +
                "-9e12-d1d3f0e22e15\"}";
            request37.Body = request37Body;
            yield return request37;
            request37 = null;

            WebTestRequest request38 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request38.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request38.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request38.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request38.QueryStringParameters.Add("format", "json", false, false);
            request38.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            yield return request38;
            request38 = null;

            WebTestRequest request39 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096");
            request39.ThinkTime = 14;
            request39.Method = "POST";
            request39.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request39.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request39.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request39.QueryStringParameters.Add("format", "json", false, false);
            request39.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:42-0400", false, false);
            StringHttpBody request39Body = new StringHttpBody();
            request39Body.ContentType = "application/json;charset=utf-8";
            request39Body.InsertByteOrderMark = false;
            request39Body.BodyString = "{\"action\":\"multiIngredientCheck\"}";
            request39.Body = request39Body;
            yield return request39;
            request39 = null;

            WebTestRequest request40 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request40.ThinkTime = 5;
            request40.Method = "POST";
            request40.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request40.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request40.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request40.QueryStringParameters.Add("format", "json", false, false);
            request40.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:38:57-0400", false, false);
            StringHttpBody request40Body = new StringHttpBody();
            request40Body.ContentType = "application/json;charset=utf-8";
            request40Body.InsertByteOrderMark = false;
            request40Body.BodyString = "{\"search\":\"mayo\",\"fltType\":\"both\"}";
            request40.Body = request40Body;
            yield return request40;
            request40 = null;

            WebTestRequest request41 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request41.ThinkTime = 11;
            request41.Method = "POST";
            request41.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request41.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request41.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request41.QueryStringParameters.Add("format", "json", false, false);
            request41.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:02-0400", false, false);
            StringHttpBody request41Body = new StringHttpBody();
            request41Body.ContentType = "application/json;charset=utf-8";
            request41Body.InsertByteOrderMark = false;
            request41Body.BodyString = "{\"search\":\"mayonaise\",\"fltType\":\"both\"}";
            request41.Body = request41Body;
            yield return request41;
            request41 = null;

            WebTestRequest request42 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/unknown");
            request42.Method = "POST";
            request42.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request42.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request42.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request42.QueryStringParameters.Add("format", "json", false, false);
            request42.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:12-0400", false, false);
            StringHttpBody request42Body = new StringHttpBody();
            request42Body.ContentType = "application/json;charset=utf-8";
            request42Body.InsertByteOrderMark = false;
            request42Body.BodyString = "{\"userInput\":\"mayonaise\"}";
            request42.Body = request42Body;
            yield return request42;
            request42 = null;

            WebTestRequest request43 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request43.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request43.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request43.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request43.QueryStringParameters.Add("format", "json", false, false);
            request43.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:12-0400", false, false);
            yield return request43;
            request43 = null;

            WebTestRequest request44 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request44.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request44.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request44.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request44.QueryStringParameters.Add("fltType", "undefined", false, false);
            request44.QueryStringParameters.Add("format", "json", false, false);
            request44.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:13-0400", false, false);
            yield return request44;
            request44 = null;

            WebTestRequest request45 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request45.ThinkTime = 7;
            request45.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request45.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/6a33a2f1-1684-44ba-9ac4-c2bae21e4096"));
            request45.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request45.QueryStringParameters.Add("format", "json", false, false);
            request45.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:13-0400", false, false);
            yield return request45;
            request45 = null;

            WebTestRequest request46 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request46.ThinkTime = 19;
            request46.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request46.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request46.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request46.QueryStringParameters.Add("format", "json", false, false);
            request46.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:20-0400", false, false);
            yield return request46;
            request46 = null;

            WebTestRequest request47 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "");
            request47.Method = "POST";
            request47.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request47.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request47.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request47.QueryStringParameters.Add("format", "json", false, false);
            request47.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:39-0400", false, false);
            StringHttpBody request47Body = new StringHttpBody();
            request47Body.ContentType = "application/json;charset=utf-8";
            request47Body.InsertByteOrderMark = false;
            request47Body.BodyString = @"{""mealName"":""Dinner"",""date"":""2017-06-14 04:00:00Z"",""time"":""2017-06-15T22:00:20.000Z"",""eatWithAnyone"":""no"",""location"":""home"",""activity"":""[\""computer\""]"",""ateWith"":""no"",""mealNameError"":false,""dateError"":false,""timeError"":false,""eatWithAnyoneError"":false,""locationError"":false,""activityError"":false,""ateWithError"":false,""mealTime"":""2017-06-14T18:00:00-0400""}";
            request47.Body = request47Body;
            yield return request47;
            request47 = null;

            WebTestRequest request48 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request48.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request48.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request48.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request48.QueryStringParameters.Add("format", "json", false, false);
            request48.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:40-0400", false, false);
            yield return request48;
            request48 = null;

            WebTestRequest request49 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b");
            request49.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request49.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request49.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request49.QueryStringParameters.Add("format", "json", false, false);
            request49.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:40-0400", false, false);
            yield return request49;
            request49 = null;

            WebTestRequest request50 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request50.ThinkTime = 6;
            request50.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request50.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request50.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request50.QueryStringParameters.Add("fltType", "both", false, false);
            request50.QueryStringParameters.Add("format", "json", false, false);
            request50.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:40-0400", false, false);
            yield return request50;
            request50 = null;

            WebTestRequest request51 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request51.ThinkTime = 12;
            request51.Method = "POST";
            request51.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request51.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request51.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request51.QueryStringParameters.Add("format", "json", false, false);
            request51.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:45-0400", false, false);
            StringHttpBody request51Body = new StringHttpBody();
            request51Body.ContentType = "application/json;charset=utf-8";
            request51Body.InsertByteOrderMark = false;
            request51Body.BodyString = "{\"search\":\"subway\",\"fltType\":\"both\"}";
            request51.Body = request51Body;
            yield return request51;
            request51 = null;

            WebTestRequest request52 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request52.ThinkTime = 11;
            request52.Method = "POST";
            request52.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request52.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request52.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request52.QueryStringParameters.Add("format", "json", false, false);
            request52.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:39:57-0400", false, false);
            StringHttpBody request52Body = new StringHttpBody();
            request52Body.ContentType = "application/json;charset=utf-8";
            request52Body.InsertByteOrderMark = false;
            request52Body.BodyString = "{\"search\":\"subway veggie patty\",\"fltType\":\"both\"}";
            request52.Body = request52Body;
            yield return request52;
            request52 = null;

            WebTestRequest request53 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request53.ThinkTime = 11;
            request53.Method = "POST";
            request53.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request53.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request53.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request53.QueryStringParameters.Add("format", "json", false, false);
            request53.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:40:08-0400", false, false);
            StringHttpBody request53Body = new StringHttpBody();
            request53Body.ContentType = "application/json;charset=utf-8";
            request53Body.InsertByteOrderMark = false;
            request53Body.BodyString = "{\"term\":\"subway veggie patty\",\"fltId\":\"4a983ce1-db90-41c0-977b-3d0dc8bcc733\",\"sel" +
                "ectedFacets\":[],\"mealId\":\"545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b\"}";
            request53.Body = request53Body;
            yield return request53;
            request53 = null;

           


            WebTestRequest request54 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request54.ThinkTime = 24;
            request54.Method = "POST";
            request54.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request54.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request54.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request54.QueryStringParameters.Add("format", "json", false, false);
            request54.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:40:19-0400", false, false);
            StringHttpBody request54Body = new StringHttpBody();
            request54Body.ContentType = "application/json;charset=utf-8";
            request54Body.InsertByteOrderMark = false;
            request54Body.BodyString = "{\"search\":\"bread\",\"fltType\":\"both\"}";
            request54.Body = request54Body;
            yield return request54;
            request54 = null;

            WebTestRequest request55 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request55.ThinkTime = 22;
            request55.Method = "POST";
            request55.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request55.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request55.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request55.QueryStringParameters.Add("format", "json", false, false);
            request55.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:40:43-0400", false, false);
            StringHttpBody request55Body = new StringHttpBody();
            request55Body.ContentType = "application/json;charset=utf-8";
            request55Body.InsertByteOrderMark = false;
            request55Body.BodyString = "{\"search\":\"flat bread\",\"fltType\":\"both\"}";
            request55.Body = request55Body;
            yield return request55;
            request55 = null;

            WebTestRequest request56 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request56.ThinkTime = 10;
            request56.Method = "POST";
            request56.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request56.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request56.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request56.QueryStringParameters.Add("format", "json", false, false);
            request56.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:05-0400", false, false);
            StringHttpBody request56Body = new StringHttpBody();
            request56Body.ContentType = "application/json;charset=utf-8";
            request56Body.InsertByteOrderMark = false;
            request56Body.BodyString = "{\"search\":\"flat bread\",\"fltType\":\"both\"}";
            request56.Body = request56Body;
            yield return request56;
            request56 = null;

            WebTestRequest request57 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request57.ThinkTime = 9;
            request57.Method = "POST";
            request57.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request57.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request57.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request57.QueryStringParameters.Add("format", "json", false, false);
            request57.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:16-0400", false, false);
            StringHttpBody request57Body = new StringHttpBody();
            request57Body.ContentType = "application/json;charset=utf-8";
            request57Body.InsertByteOrderMark = false;
            request57Body.BodyString = "{\"term\":\"flat bread\",\"fltId\":\"51218c1d-1dcc-4f3b-865f-637fe10bb3e9\",\"selectedFace" +
                "ts\":[],\"mealId\":\"545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b\"}";
            request57.Body = request57Body;
            yield return request57;
            request57 = null;

            WebTestRequest request58 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request58.ThinkTime = 16;
            request58.Method = "POST";
            request58.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request58.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request58.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request58.QueryStringParameters.Add("format", "json", false, false);
            request58.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:25-0400", false, false);
            StringHttpBody request58Body = new StringHttpBody();
            request58Body.ContentType = "application/json;charset=utf-8";
            request58Body.InsertByteOrderMark = false;
            request58Body.BodyString = "{\"search\":\"mayonaise\",\"fltType\":\"both\"}";
            request58.Body = request58Body;
            yield return request58;
            request58 = null;

            WebTestRequest request59 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request59.ThinkTime = 4;
            request59.Method = "POST";
            request59.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request59.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request59.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request59.QueryStringParameters.Add("format", "json", false, false);
            request59.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:41-0400", false, false);
            StringHttpBody request59Body = new StringHttpBody();
            request59Body.ContentType = "application/json;charset=utf-8";
            request59Body.InsertByteOrderMark = false;
            request59Body.BodyString = "{\"search\":\"spinach\",\"fltType\":\"both\"}";
            request59.Body = request59Body;
            yield return request59;
            request59 = null;

            WebTestRequest request60 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request60.ThinkTime = 5;
            request60.Method = "POST";
            request60.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request60.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request60.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request60.QueryStringParameters.Add("format", "json", false, false);
            request60.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:45-0400", false, false);
            StringHttpBody request60Body = new StringHttpBody();
            request60Body.ContentType = "application/json;charset=utf-8";
            request60Body.InsertByteOrderMark = false;
            request60Body.BodyString = "{\"term\":\"spinach\",\"fltId\":\"df9f6e68-7493-4c9e-a0a9-77191f888921\",\"selectedFacets\"" +
                ":[],\"mealId\":\"545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b\"}";
            request60.Body = request60Body;
            yield return request60;
            request60 = null;

            WebTestRequest request61 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request61.ThinkTime = 4;
            request61.Method = "POST";
            request61.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request61.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request61.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request61.QueryStringParameters.Add("format", "json", false, false);
            request61.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:50-0400", false, false);
            StringHttpBody request61Body = new StringHttpBody();
            request61Body.ContentType = "application/json;charset=utf-8";
            request61Body.InsertByteOrderMark = false;
            request61Body.BodyString = "{\"search\":\"cucumbers\",\"fltType\":\"both\"}";
            request61.Body = request61Body;
            yield return request61;
            request61 = null;

            WebTestRequest request62 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request62.ThinkTime = 2;
            request62.Method = "POST";
            request62.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request62.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request62.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request62.QueryStringParameters.Add("format", "json", false, false);
            request62.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:54-0400", false, false);
            StringHttpBody request62Body = new StringHttpBody();
            request62Body.ContentType = "application/json;charset=utf-8";
            request62Body.InsertByteOrderMark = false;
            request62Body.BodyString = "{\"search\":\"cucumber\",\"fltType\":\"both\"}";
            request62.Body = request62Body;
            yield return request62;
            request62 = null;

            WebTestRequest request63 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request63.ThinkTime = 6;
            request63.Method = "POST";
            request63.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request63.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request63.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request63.QueryStringParameters.Add("format", "json", false, false);
            request63.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:41:56-0400", false, false);
            StringHttpBody request63Body = new StringHttpBody();
            request63Body.ContentType = "application/json;charset=utf-8";
            request63Body.InsertByteOrderMark = false;
            request63Body.BodyString = "{\"term\":\"cucumber\",\"fltId\":\"2750ffbb-7012-4ba4-9cbf-e0115a30d024\",\"selectedFacets" +
                "\":[],\"mealId\":\"545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b\"}";
            request63.Body = request63Body;
            yield return request63;
            request63 = null;

            WebTestRequest request64 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request64.ThinkTime = 22;
            request64.Method = "POST";
            request64.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request64.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request64.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request64.QueryStringParameters.Add("format", "json", false, false);
            request64.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:02-0400", false, false);
            StringHttpBody request64Body = new StringHttpBody();
            request64Body.ContentType = "application/json;charset=utf-8";
            request64Body.InsertByteOrderMark = false;
            request64Body.BodyString = "{\"search\":\"tomato\",\"fltType\":\"both\"}";
            request64.Body = request64Body;
            yield return request64;
            request64 = null;

            WebTestRequest request65 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request65.ThinkTime = 8;
            request65.Method = "POST";
            request65.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request65.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request65.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request65.QueryStringParameters.Add("format", "json", false, false);
            request65.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:24-0400", false, false);
            StringHttpBody request65Body = new StringHttpBody();
            request65Body.ContentType = "application/json;charset=utf-8";
            request65Body.InsertByteOrderMark = false;
            request65Body.BodyString = "{\"search\":\"chips\",\"fltType\":\"both\"}";
            request65.Body = request65Body;
            yield return request65;
            request65 = null;

            WebTestRequest request66 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request66.ThinkTime = 8;
            request66.Method = "POST";
            request66.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request66.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request66.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request66.QueryStringParameters.Add("format", "json", false, false);
            request66.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:32-0400", false, false);
            StringHttpBody request66Body = new StringHttpBody();
            request66Body.ContentType = "application/json;charset=utf-8";
            request66Body.InsertByteOrderMark = false;
            request66Body.BodyString = "{\"term\":\"chips\",\"fltId\":\"c1b1986b-b985-43e6-a617-53d5166d6583\",\"selectedFacets\":[" +
                "],\"mealId\":\"545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b\"}";
            request66.Body = request66Body;
            yield return request66;
            request66 = null;

            WebTestRequest request67 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods");
            request67.Method = "POST";
            request67.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request67.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request67.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request67.QueryStringParameters.Add("format", "json", false, false);
            request67.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request67Body = new StringHttpBody();
            request67Body.ContentType = "application/json;charset=utf-8";
            request67Body.InsertByteOrderMark = false;
            request67Body.BodyString = "{\"fltId\":\"4a983ce1-db90-41c0-977b-3d0dc8bcc733\",\"flt\":\"Veggie patty\",\"facets\":{\"M" +
                "eat, Poultry, Fish, Eggs & Nuts\":[\"Vegetarian meat\"]},\"rank\":0,\"foodFltId\":\"4a98" +
                "3ce1-db90-41c0-977b-3d0dc8bcc733\"}";
            request67.Body = request67Body;
            yield return request67;
            request67 = null;

            WebTestRequest request68 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods");
            request68.Method = "POST";
            request68.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request68.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request68.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request68.QueryStringParameters.Add("format", "json", false, false);
            request68.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request68Body = new StringHttpBody();
            request68Body.ContentType = "application/json;charset=utf-8";
            request68Body.InsertByteOrderMark = false;
            request68Body.BodyString = "{\"fltId\":\"51218c1d-1dcc-4f3b-865f-637fe10bb3e9\",\"flt\":\"Bread (other kind)\",\"facet" +
                "s\":{\"Breads, Cereals, Bakery products & Salty snacks\":[\"Bread, Muffin, Roll, Tor" +
                "tilla\"]},\"rank\":1,\"foodFltId\":\"51218c1d-1dcc-4f3b-865f-637fe10bb3e9\"}";
            request68.Body = request68Body;
            yield return request68;
            request68 = null;

            WebTestRequest request69 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/unknown");
            request69.Method = "POST";
            request69.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request69.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request69.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request69.QueryStringParameters.Add("format", "json", false, false);
            request69.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request69Body = new StringHttpBody();
            request69Body.ContentType = "application/json;charset=utf-8";
            request69Body.InsertByteOrderMark = false;
            request69Body.BodyString = "{\"userInput\":\"mayonaise\"}";
            request69.Body = request69Body;
            yield return request69;
            request69 = null;

            WebTestRequest request70 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods");
            request70.Method = "POST";
            request70.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request70.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request70.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request70.QueryStringParameters.Add("format", "json", false, false);
            request70.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request70Body = new StringHttpBody();
            request70Body.ContentType = "application/json;charset=utf-8";
            request70Body.InsertByteOrderMark = false;
            request70Body.BodyString = "{\"fltId\":\"df9f6e68-7493-4c9e-a0a9-77191f888921\",\"flt\":\"Spinach\",\"facets\":{\"Vegeta" +
                "bles, Beans & Salad\":[\"Vegetable\"]},\"rank\":3,\"foodFltId\":\"df9f6e68-7493-4c9e-a0a" +
                "9-77191f888921\"}";
            request70.Body = request70Body;
            yield return request70;
            request70 = null;

            WebTestRequest request71 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods");
            request71.Method = "POST";
            request71.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request71.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request71.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request71.QueryStringParameters.Add("format", "json", false, false);
            request71.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request71Body = new StringHttpBody();
            request71Body.ContentType = "application/json;charset=utf-8";
            request71Body.InsertByteOrderMark = false;
            request71Body.BodyString = "{\"fltId\":\"2750ffbb-7012-4ba4-9cbf-e0115a30d024\",\"flt\":\"Cucumber\",\"facets\":{\"Veget" +
                "ables, Beans & Salad\":[\"Vegetable\"]},\"rank\":4,\"foodFltId\":\"2750ffbb-7012-4ba4-9c" +
                "bf-e0115a30d024\"}";
            request71.Body = request71Body;
            yield return request71;
            request71 = null;

            WebTestRequest request72 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/unknown");
            request72.Method = "POST";
            request72.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request72.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request72.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request72.QueryStringParameters.Add("format", "json", false, false);
            request72.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request72Body = new StringHttpBody();
            request72Body.ContentType = "application/json;charset=utf-8";
            request72Body.InsertByteOrderMark = false;
            request72Body.BodyString = "{\"userInput\":\"tomato\"}";
            request72.Body = request72Body;
            yield return request72;
            request72 = null;

            WebTestRequest request73 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods");
            request73.Method = "POST";
            request73.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request73.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request73.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request73.QueryStringParameters.Add("format", "json", false, false);
            request73.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:40-0400", false, false);
            StringHttpBody request73Body = new StringHttpBody();
            request73Body.ContentType = "application/json;charset=utf-8";
            request73Body.InsertByteOrderMark = false;
            request73Body.BodyString = "{\"fltId\":\"c1b1986b-b985-43e6-a617-53d5166d6583\",\"flt\":\"Potato chips (other brand)" +
                "\",\"facets\":{\"Breads, Cereals, Bakery products & Salty snacks\":[\"Cracker, Chip, P" +
                "opcorn\"]},\"rank\":6,\"foodFltId\":\"c1b1986b-b985-43e6-a617-53d5166d6583\"}";
            request73.Body = request73Body;
            yield return request73;
            request73 = null;

            WebTestRequest request74 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request74.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request74.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request74.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request74.QueryStringParameters.Add("format", "json", false, false);
            request74.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:41-0400", false, false);
            yield return request74;
            request74 = null;

            WebTestRequest request75 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b");
            request75.ThinkTime = 10;
            request75.Method = "POST";
            request75.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request75.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request75.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request75.QueryStringParameters.Add("format", "json", false, false);
            request75.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:41-0400", false, false);
            StringHttpBody request75Body = new StringHttpBody();
            request75Body.ContentType = "application/json;charset=utf-8";
            request75Body.InsertByteOrderMark = false;
            request75Body.BodyString = "{\"action\":\"multiIngredientCheck\"}";
            request75.Body = request75Body;
            yield return request75;
            request75 = null;

            WebTestRequest request76 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request76.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request76.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request76.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request76.QueryStringParameters.Add("fltType", "undefined", false, false);
            request76.QueryStringParameters.Add("format", "json", false, false);
            request76.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:51-0400", false, false);
            yield return request76;
            request76 = null;

            WebTestRequest request77 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request77.ThinkTime = 6;
            request77.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request77.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b"));
            request77.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request77.QueryStringParameters.Add("format", "json", false, false);
            request77.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:51-0400", false, false);
            yield return request77;
            request77 = null;

            WebTestRequest request78 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/mealGapReview/completed");
            request78.ThinkTime = 23;
            request78.Method = "POST";
            request78.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request78.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request78.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request78.QueryStringParameters.Add("format", "json", false, false);
            request78.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:42:57-0400", false, false);
            StringHttpBody request78Body = new StringHttpBody();
            request78Body.ContentType = "";
            request78Body.InsertByteOrderMark = false;
            request78Body.BodyString = "";
            request78.Body = request78Body;
            yield return request78;
            request78 = null;

            WebTestRequest request79 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request79.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request79.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request79.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request79.QueryStringParameters.Add("format", "json", false, false);
            request79.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:20-0400", false, false);
            yield return request79;
            request79 = null;

            WebTestRequest request80 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727/childre" +
                    "n");
            request80.ThinkTime = 13;
            request80.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request80.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request80.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request80.QueryStringParameters.Add("format", "json", false, false);
            request80.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:20-0400", false, false);
            request80.QueryStringParameters.Add("children", "true", false, false);
            request80.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request80.QueryStringParameters.Add("includeSource", "true", false, false);
            request80.QueryStringParameters.Add("levels", "2", false, false);
            request80.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request80;
            request80 = null;

            WebTestRequest request81 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request81.Method = "POST";
            request81.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request81.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request81.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request81.QueryStringParameters.Add("format", "json", false, false);
            request81.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:34-0400", false, false);
            StringHttpBody request81Body = new StringHttpBody();
            request81Body.ContentType = "application/json;charset=utf-8";
            request81Body.InsertByteOrderMark = false;
            request81Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request81.Body = request81Body;
            yield return request81;
            request81 = null;

            WebTestRequest request82 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request82.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request82.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request82.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request82.QueryStringParameters.Add("format", "json", false, false);
            request82.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:35-0400", false, false);
            yield return request82;
            request82 = null;

            WebTestRequest request83 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request83.ThinkTime = 10;
            request83.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request83.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request83.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request83.QueryStringParameters.Add("format", "json", false, false);
            request83.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:36-0400", false, false);
            request83.QueryStringParameters.Add("children", "true", false, false);
            request83.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request83.QueryStringParameters.Add("includeSource", "true", false, false);
            request83.QueryStringParameters.Add("levels", "2", false, false);
            request83.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request83;
            request83 = null;

            WebTestRequest request84 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request84.Method = "POST";
            request84.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request84.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request84.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request84.QueryStringParameters.Add("format", "json", false, false);
            request84.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:46-0400", false, false);
            StringHttpBody request84Body = new StringHttpBody();
            request84Body.ContentType = "application/json;charset=utf-8";
            request84Body.InsertByteOrderMark = false;
            request84Body.BodyString = "{\"detailFltId\":\"4acfe779-705b-4964-b547-0ddb013bce3a\",\"answers\":[{\"detailFltId\":\"" +
                "d32285cd-3d44-401c-bc5f-0aaa375b6b3c\"}]}";
            request84.Body = request84Body;
            yield return request84;
            request84 = null;

            WebTestRequest request85 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request85.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request85.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request85.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request85.QueryStringParameters.Add("format", "json", false, false);
            request85.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:47-0400", false, false);
            yield return request85;
            request85 = null;

            WebTestRequest request86 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d32285cd-3d44-401c-bc5f-0aaa375b6b3c/childre" +
                    "n");
            request86.ThinkTime = 5;
            request86.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request86.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request86.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request86.QueryStringParameters.Add("format", "json", false, false);
            request86.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:47-0400", false, false);
            request86.QueryStringParameters.Add("children", "true", false, false);
            request86.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request86.QueryStringParameters.Add("includeSource", "true", false, false);
            request86.QueryStringParameters.Add("levels", "2", false, false);
            request86.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request86;
            request86 = null;

            WebTestRequest request87 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request87.Method = "POST";
            request87.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request87.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request87.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request87.QueryStringParameters.Add("format", "json", false, false);
            request87.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:53-0400", false, false);
            StringHttpBody request87Body = new StringHttpBody();
            request87Body.ContentType = "application/json;charset=utf-8";
            request87Body.InsertByteOrderMark = false;
            request87Body.BodyString = "{\"detailFltId\":\"15d7f8c8-1be2-450a-aa44-7d232ea0e166\",\"answers\":[{\"detailFltId\":\"" +
                "7135e891-e6f6-43f1-ac0a-bd1dc729ae3b\"}]}";
            request87.Body = request87Body;
            yield return request87;
            request87 = null;

            WebTestRequest request88 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request88.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request88.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request88.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request88.QueryStringParameters.Add("format", "json", false, false);
            request88.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:54-0400", false, false);
            yield return request88;
            request88 = null;

            WebTestRequest request89 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/7135e891-e6f6-43f1-ac0a-bd1dc729ae3b/childre" +
                    "n");
            request89.ThinkTime = 6;
            request89.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request89.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request89.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request89.QueryStringParameters.Add("format", "json", false, false);
            request89.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:43:54-0400", false, false);
            request89.QueryStringParameters.Add("children", "true", false, false);
            request89.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request89.QueryStringParameters.Add("includeSource", "true", false, false);
            request89.QueryStringParameters.Add("levels", "2", false, false);
            request89.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request89;
            request89 = null;

            WebTestRequest request90 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request90.Method = "POST";
            request90.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request90.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request90.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request90.QueryStringParameters.Add("format", "json", false, false);
            request90.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:01-0400", false, false);
            StringHttpBody request90Body = new StringHttpBody();
            request90Body.ContentType = "application/json;charset=utf-8";
            request90Body.InsertByteOrderMark = false;
            request90Body.BodyString = "{\"detailFltId\":\"dd2f36c2-d034-4f74-af2d-940d13274850\",\"answers\":[{\"detailFltId\":\"" +
                "cb9bfa6c-737c-4289-96c5-963f60fc87d0\"}]}";
            request90.Body = request90Body;
            yield return request90;
            request90 = null;

            WebTestRequest request91 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request91.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request91.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request91.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request91.QueryStringParameters.Add("format", "json", false, false);
            request91.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:01-0400", false, false);
            yield return request91;
            request91 = null;

            WebTestRequest request92 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/cb9bfa6c-737c-4289-96c5-963f60fc87d0/childre" +
                    "n");
            request92.ThinkTime = 5;
            request92.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request92.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request92.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request92.QueryStringParameters.Add("format", "json", false, false);
            request92.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:01-0400", false, false);
            request92.QueryStringParameters.Add("children", "true", false, false);
            request92.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request92.QueryStringParameters.Add("includeSource", "true", false, false);
            request92.QueryStringParameters.Add("levels", "2", false, false);
            request92.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request92;
            request92 = null;

            WebTestRequest request93 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request93.Method = "POST";
            request93.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request93.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request93.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request93.QueryStringParameters.Add("format", "json", false, false);
            request93.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:07-0400", false, false);
            StringHttpBody request93Body = new StringHttpBody();
            request93Body.ContentType = "application/json;charset=utf-8";
            request93Body.InsertByteOrderMark = false;
            request93Body.BodyString = "{\"detailFltId\":\"547dd181-f3c0-4303-a180-9f48fce5eb26\",\"answers\":[{\"detailFltId\":\"" +
                "e510f785-e710-43ae-b81c-b07ee8de255e\"}]}";
            request93.Body = request93Body;
            yield return request93;
            request93 = null;

            WebTestRequest request94 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request94.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request94.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request94.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request94.QueryStringParameters.Add("format", "json", false, false);
            request94.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:07-0400", false, false);
            yield return request94;
            request94 = null;

            WebTestRequest request95 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/e510f785-e710-43ae-b81c-b07ee8de255e/childre" +
                    "n");
            request95.ThinkTime = 10;
            request95.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request95.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request95.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request95.QueryStringParameters.Add("format", "json", false, false);
            request95.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:08-0400", false, false);
            request95.QueryStringParameters.Add("children", "true", false, false);
            request95.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request95.QueryStringParameters.Add("includeSource", "true", false, false);
            request95.QueryStringParameters.Add("levels", "2", false, false);
            request95.QueryStringParameters.Add("parentFoodFltId", "4b5791b5-fad7-4f4b-9fb8-8d29ba3ea727", false, false);
            yield return request95;
            request95 = null;

            WebTestRequest request96 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/aad0c991-2e2e-4bc5-a956-9d9d48496389" +
                    "/details");
            request96.Method = "POST";
            request96.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request96.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request96.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request96.QueryStringParameters.Add("format", "json", false, false);
            request96.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:18-0400", false, false);
            StringHttpBody request96Body = new StringHttpBody();
            request96Body.ContentType = "application/json;charset=utf-8";
            request96Body.InsertByteOrderMark = false;
            request96Body.BodyString = "{\"detailFltId\":\"f2085e55-424b-4a5f-a3e2-0d0068d09096\",\"answers\":[{\"detailFltId\":\"" +
                "b2700114-46a1-45e0-ab68-4de17d6cef87\"}]}";
            request96.Body = request96Body;
            yield return request96;
            request96 = null;

            WebTestRequest request97 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request97.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request97.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request97.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request97.QueryStringParameters.Add("format", "json", false, false);
            request97.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:19-0400", false, false);
            yield return request97;
            request97 = null;

            WebTestRequest request98 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d873bf97-6dd9-4136-a0d3-3dafa13c7efa/childre" +
                    "n");
            request98.ThinkTime = 5;
            request98.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request98.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request98.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request98.QueryStringParameters.Add("format", "json", false, false);
            request98.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:20-0400", false, false);
            request98.QueryStringParameters.Add("children", "true", false, false);
            request98.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request98.QueryStringParameters.Add("includeSource", "true", false, false);
            request98.QueryStringParameters.Add("levels", "2", false, false);
            request98.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request98;
            request98 = null;

            WebTestRequest request99 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/3d89201d-1aa9-42e4-95d2-256be971f0aa" +
                    "/details");
            request99.Method = "POST";
            request99.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request99.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request99.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request99.QueryStringParameters.Add("format", "json", false, false);
            request99.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:25-0400", false, false);
            StringHttpBody request99Body = new StringHttpBody();
            request99Body.ContentType = "application/json;charset=utf-8";
            request99Body.InsertByteOrderMark = false;
            request99Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request99.Body = request99Body;
            yield return request99;
            request99 = null;

            WebTestRequest request100 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request100.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request100.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request100.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request100.QueryStringParameters.Add("format", "json", false, false);
            request100.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:29-0400", false, false);
            yield return request100;
            request100 = null;

            WebTestRequest request101 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request101.ThinkTime = 7;
            request101.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request101.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request101.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request101.QueryStringParameters.Add("format", "json", false, false);
            request101.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:29-0400", false, false);
            request101.QueryStringParameters.Add("children", "true", false, false);
            request101.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request101.QueryStringParameters.Add("includeSource", "true", false, false);
            request101.QueryStringParameters.Add("levels", "2", false, false);
            request101.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request101;
            request101 = null;

            WebTestRequest request102 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/3d89201d-1aa9-42e4-95d2-256be971f0aa" +
                    "/details");
            request102.Method = "POST";
            request102.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request102.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request102.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request102.QueryStringParameters.Add("format", "json", false, false);
            request102.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:36-0400", false, false);
            StringHttpBody request102Body = new StringHttpBody();
            request102Body.ContentType = "application/json;charset=utf-8";
            request102Body.InsertByteOrderMark = false;
            request102Body.BodyString = "{\"detailFltId\":\"9a73d6bd-63b0-44dc-a38c-58153e9f5cfc\",\"answers\":[{\"detailFltId\":\"" +
                "c019a9f9-8f8a-421d-81e2-86670884e6e4\"}]}";
            request102.Body = request102Body;
            yield return request102;
            request102 = null;

            WebTestRequest request103 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request103.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request103.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request103.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request103.QueryStringParameters.Add("format", "json", false, false);
            request103.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:37-0400", false, false);
            yield return request103;
            request103 = null;

            WebTestRequest request104 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/c019a9f9-8f8a-421d-81e2-86670884e6e4/childre" +
                    "n");
            request104.ThinkTime = 7;
            request104.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request104.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request104.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request104.QueryStringParameters.Add("format", "json", false, false);
            request104.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:37-0400", false, false);
            request104.QueryStringParameters.Add("children", "true", false, false);
            request104.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request104.QueryStringParameters.Add("includeSource", "true", false, false);
            request104.QueryStringParameters.Add("levels", "2", false, false);
            request104.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request104;
            request104 = null;

            WebTestRequest request105 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/3d89201d-1aa9-42e4-95d2-256be971f0aa" +
                    "/details");
            request105.Method = "POST";
            request105.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request105.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request105.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request105.QueryStringParameters.Add("format", "json", false, false);
            request105.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:43-0400", false, false);
            StringHttpBody request105Body = new StringHttpBody();
            request105Body.ContentType = "application/json;charset=utf-8";
            request105Body.InsertByteOrderMark = false;
            request105Body.BodyString = "{\"detailFltId\":\"feb959a5-986a-407b-a6ad-149923608de3\",\"answers\":[{\"detailFltId\":\"" +
                "3a9a2073-f2cb-400b-b6c1-07c07b0f8d59\"}]}";
            request105.Body = request105Body;
            yield return request105;
            request105 = null;

            WebTestRequest request106 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request106.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request106.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request106.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request106.QueryStringParameters.Add("format", "json", false, false);
            request106.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:44-0400", false, false);
            yield return request106;
            request106 = null;

            WebTestRequest request107 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/3a9a2073-f2cb-400b-b6c1-07c07b0f8d59/childre" +
                    "n");
            request107.ThinkTime = 7;
            request107.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request107.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request107.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request107.QueryStringParameters.Add("format", "json", false, false);
            request107.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:44-0400", false, false);
            request107.QueryStringParameters.Add("children", "true", false, false);
            request107.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request107.QueryStringParameters.Add("includeSource", "true", false, false);
            request107.QueryStringParameters.Add("levels", "2", false, false);
            request107.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request107;
            request107 = null;

            WebTestRequest request108 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/3d89201d-1aa9-42e4-95d2-256be971f0aa" +
                    "/details");
            request108.Method = "POST";
            request108.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request108.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request108.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request108.QueryStringParameters.Add("format", "json", false, false);
            request108.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:51-0400", false, false);
            StringHttpBody request108Body = new StringHttpBody();
            request108Body.ContentType = "application/json;charset=utf-8";
            request108Body.InsertByteOrderMark = false;
            request108Body.BodyString = "{\"detailFltId\":\"b737bf3c-49b7-4436-8379-fe4590d0bef8\",\"answers\":[{\"detailFltId\":\"" +
                "da8bc8e3-01cf-4826-9b60-7d95037ca410\"}]}";
            request108.Body = request108Body;
            yield return request108;
            request108 = null;

            WebTestRequest request109 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request109.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request109.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request109.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request109.QueryStringParameters.Add("format", "json", false, false);
            request109.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:51-0400", false, false);
            yield return request109;
            request109 = null;

            WebTestRequest request110 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/da8bc8e3-01cf-4826-9b60-7d95037ca410/childre" +
                    "n");
            request110.ThinkTime = 8;
            request110.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request110.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request110.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request110.QueryStringParameters.Add("format", "json", false, false);
            request110.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:44:51-0400", false, false);
            request110.QueryStringParameters.Add("children", "true", false, false);
            request110.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request110.QueryStringParameters.Add("includeSource", "true", false, false);
            request110.QueryStringParameters.Add("levels", "2", false, false);
            request110.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request110;
            request110 = null;

            WebTestRequest request111 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/3d89201d-1aa9-42e4-95d2-256be971f0aa" +
                    "/details");
            request111.Method = "POST";
            request111.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request111.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request111.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request111.QueryStringParameters.Add("format", "json", false, false);
            request111.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:00-0400", false, false);
            StringHttpBody request111Body = new StringHttpBody();
            request111Body.ContentType = "application/json;charset=utf-8";
            request111Body.InsertByteOrderMark = false;
            request111Body.BodyString = "{\"detailFltId\":\"f5300bac-27c0-458b-bce9-3b1e342635a0\",\"answers\":[{\"detailFltId\":\"" +
                "1a5e4b45-7e53-47be-9925-049cdca0211b\"}]}";
            request111.Body = request111Body;
            yield return request111;
            request111 = null;

            WebTestRequest request112 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request112.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request112.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request112.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request112.QueryStringParameters.Add("format", "json", false, false);
            request112.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:00-0400", false, false);
            yield return request112;
            request112 = null;

            WebTestRequest request113 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/9f71b457-993d-436f-8485-1711e6e1323c/childre" +
                    "n");
            request113.ThinkTime = 5;
            request113.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request113.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request113.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request113.QueryStringParameters.Add("format", "json", false, false);
            request113.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:00-0400", false, false);
            request113.QueryStringParameters.Add("children", "true", false, false);
            request113.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request113.QueryStringParameters.Add("includeSource", "true", false, false);
            request113.QueryStringParameters.Add("levels", "2", false, false);
            request113.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request113;
            request113 = null;

            WebTestRequest request114 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request114.Method = "POST";
            request114.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request114.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request114.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request114.QueryStringParameters.Add("format", "json", false, false);
            request114.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:05-0400", false, false);
            StringHttpBody request114Body = new StringHttpBody();
            request114Body.ContentType = "application/json;charset=utf-8";
            request114Body.InsertByteOrderMark = false;
            request114Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request114.Body = request114Body;
            yield return request114;
            request114 = null;

            WebTestRequest request115 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request115.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request115.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request115.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request115.QueryStringParameters.Add("format", "json", false, false);
            request115.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:07-0400", false, false);
            yield return request115;
            request115 = null;

            WebTestRequest request116 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request116.ThinkTime = 7;
            request116.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request116.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request116.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request116.QueryStringParameters.Add("format", "json", false, false);
            request116.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:07-0400", false, false);
            request116.QueryStringParameters.Add("children", "true", false, false);
            request116.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request116.QueryStringParameters.Add("includeSource", "true", false, false);
            request116.QueryStringParameters.Add("levels", "2", false, false);
            request116.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request116;
            request116 = null;

            WebTestRequest request117 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request117.Method = "POST";
            request117.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request117.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request117.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request117.QueryStringParameters.Add("format", "json", false, false);
            request117.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:13-0400", false, false);
            StringHttpBody request117Body = new StringHttpBody();
            request117Body.ContentType = "application/json;charset=utf-8";
            request117Body.InsertByteOrderMark = false;
            request117Body.BodyString = "{\"detailFltId\":\"8a0a71cb-8292-44df-a4d3-40a9e0b090d8\",\"answers\":[{\"detailFltId\":\"" +
                "02de4514-97db-42e7-bf22-8f956f66f3c1\"}]}";
            request117.Body = request117Body;
            yield return request117;
            request117 = null;

            WebTestRequest request118 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request118.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request118.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request118.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request118.QueryStringParameters.Add("format", "json", false, false);
            request118.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:14-0400", false, false);
            yield return request118;
            request118 = null;

            WebTestRequest request119 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/02de4514-97db-42e7-bf22-8f956f66f3c1/childre" +
                    "n");
            request119.ThinkTime = 10;
            request119.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request119.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request119.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request119.QueryStringParameters.Add("format", "json", false, false);
            request119.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:14-0400", false, false);
            request119.QueryStringParameters.Add("children", "true", false, false);
            request119.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request119.QueryStringParameters.Add("includeSource", "true", false, false);
            request119.QueryStringParameters.Add("levels", "2", false, false);
            request119.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request119;
            request119 = null;

            WebTestRequest request120 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request120.Method = "POST";
            request120.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request120.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request120.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request120.QueryStringParameters.Add("format", "json", false, false);
            request120.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:24-0400", false, false);
            StringHttpBody request120Body = new StringHttpBody();
            request120Body.ContentType = "application/json;charset=utf-8";
            request120Body.InsertByteOrderMark = false;
            request120Body.BodyString = "{\"detailFltId\":\"2e110417-92eb-4a29-8fab-b086dfa528f6\",\"answers\":[{\"detailFltId\":\"" +
                "1a0c2ebc-2105-4b9b-abcf-2189f42930f9\"}]}";
            request120.Body = request120Body;
            yield return request120;
            request120 = null;

            WebTestRequest request121 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request121.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request121.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request121.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request121.QueryStringParameters.Add("format", "json", false, false);
            request121.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:24-0400", false, false);
            yield return request121;
            request121 = null;

            WebTestRequest request122 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/1a0c2ebc-2105-4b9b-abcf-2189f42930f9/childre" +
                    "n");
            request122.ThinkTime = 7;
            request122.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request122.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request122.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request122.QueryStringParameters.Add("format", "json", false, false);
            request122.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:24-0400", false, false);
            request122.QueryStringParameters.Add("children", "true", false, false);
            request122.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request122.QueryStringParameters.Add("includeSource", "true", false, false);
            request122.QueryStringParameters.Add("levels", "2", false, false);
            request122.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request122;
            request122 = null;

            WebTestRequest request123 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request123.Method = "POST";
            request123.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request123.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request123.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request123.QueryStringParameters.Add("format", "json", false, false);
            request123.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:33-0400", false, false);
            StringHttpBody request123Body = new StringHttpBody();
            request123Body.ContentType = "application/json;charset=utf-8";
            request123Body.InsertByteOrderMark = false;
            request123Body.BodyString = "{\"detailFltId\":\"63db6556-bb7f-4e15-8885-9467cd5f1cd8\",\"answers\":[{\"detailFltId\":\"" +
                "64812f6b-0fc0-450a-a0ef-6fa80230abea\"}]}";
            request123.Body = request123Body;
            yield return request123;
            request123 = null;

            WebTestRequest request124 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request124.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request124.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request124.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request124.QueryStringParameters.Add("format", "json", false, false);
            request124.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:34-0400", false, false);
            yield return request124;
            request124 = null;

            WebTestRequest request125 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/64812f6b-0fc0-450a-a0ef-6fa80230abea/childre" +
                    "n");
            request125.ThinkTime = 5;
            request125.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request125.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request125.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request125.QueryStringParameters.Add("format", "json", false, false);
            request125.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:34-0400", false, false);
            request125.QueryStringParameters.Add("children", "true", false, false);
            request125.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request125.QueryStringParameters.Add("includeSource", "true", false, false);
            request125.QueryStringParameters.Add("levels", "2", false, false);
            request125.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request125;
            request125 = null;

            WebTestRequest request126 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request126.Method = "POST";
            request126.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request126.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request126.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request126.QueryStringParameters.Add("format", "json", false, false);
            request126.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:39-0400", false, false);
            StringHttpBody request126Body = new StringHttpBody();
            request126Body.ContentType = "application/json;charset=utf-8";
            request126Body.InsertByteOrderMark = false;
            request126Body.BodyString = "{\"detailFltId\":\"eb8d1991-862f-4e3f-af5c-e6ebbc68fd31\",\"answers\":[{\"detailFltId\":\"" +
                "14a672d6-0232-4e9d-b42e-72e07b19f504\"}]}";
            request126.Body = request126Body;
            yield return request126;
            request126 = null;

            WebTestRequest request127 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request127.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request127.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request127.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request127.QueryStringParameters.Add("format", "json", false, false);
            request127.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:39-0400", false, false);
            yield return request127;
            request127 = null;

            WebTestRequest request128 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/14a672d6-0232-4e9d-b42e-72e07b19f504/childre" +
                    "n");
            request128.ThinkTime = 6;
            request128.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request128.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request128.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request128.QueryStringParameters.Add("format", "json", false, false);
            request128.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:39-0400", false, false);
            request128.QueryStringParameters.Add("children", "true", false, false);
            request128.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request128.QueryStringParameters.Add("includeSource", "true", false, false);
            request128.QueryStringParameters.Add("levels", "2", false, false);
            request128.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request128;
            request128 = null;

            WebTestRequest request129 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request129.Method = "POST";
            request129.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request129.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request129.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request129.QueryStringParameters.Add("format", "json", false, false);
            request129.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:45-0400", false, false);
            StringHttpBody request129Body = new StringHttpBody();
            request129Body.ContentType = "application/json;charset=utf-8";
            request129Body.InsertByteOrderMark = false;
            request129Body.BodyString = "{\"detailFltId\":\"6739f0f3-3be1-4b45-aed3-a1bfe347c0cb\",\"answers\":[{\"detailFltId\":\"" +
                "e4e9e7ef-b2ed-47c2-b449-53b248f739ea\"}]}";
            request129.Body = request129Body;
            yield return request129;
            request129 = null;

            WebTestRequest request130 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request130.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request130.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request130.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request130.QueryStringParameters.Add("format", "json", false, false);
            request130.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:45-0400", false, false);
            yield return request130;
            request130 = null;

            WebTestRequest request131 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/e4e9e7ef-b2ed-47c2-b449-53b248f739ea/childre" +
                    "n");
            request131.ThinkTime = 3;
            request131.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request131.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request131.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request131.QueryStringParameters.Add("format", "json", false, false);
            request131.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:46-0400", false, false);
            request131.QueryStringParameters.Add("children", "true", false, false);
            request131.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request131.QueryStringParameters.Add("includeSource", "true", false, false);
            request131.QueryStringParameters.Add("levels", "2", false, false);
            request131.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request131;
            request131 = null;

            WebTestRequest request132 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request132.Method = "POST";
            request132.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request132.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request132.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request132.QueryStringParameters.Add("format", "json", false, false);
            request132.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:49-0400", false, false);
            StringHttpBody request132Body = new StringHttpBody();
            request132Body.ContentType = "application/json;charset=utf-8";
            request132Body.InsertByteOrderMark = false;
            request132Body.BodyString = "{\"detailFltId\":\"3d53bd87-8f67-4489-a077-dd62a799d056\",\"answers\":[{\"detailFltId\":\"" +
                "792eca80-a43c-4270-a813-81fe68bf0d19\"}]}";
            request132.Body = request132Body;
            yield return request132;
            request132 = null;

            WebTestRequest request133 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request133.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request133.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request133.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request133.QueryStringParameters.Add("format", "json", false, false);
            request133.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:49-0400", false, false);
            yield return request133;
            request133 = null;

            WebTestRequest request134 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/792eca80-a43c-4270-a813-81fe68bf0d19/childre" +
                    "n");
            request134.ThinkTime = 4;
            request134.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request134.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request134.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request134.QueryStringParameters.Add("format", "json", false, false);
            request134.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:49-0400", false, false);
            request134.QueryStringParameters.Add("children", "true", false, false);
            request134.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request134.QueryStringParameters.Add("includeSource", "true", false, false);
            request134.QueryStringParameters.Add("levels", "2", false, false);
            request134.QueryStringParameters.Add("parentFoodFltId", "9f71b457-993d-436f-8485-1711e6e1323c", false, false);
            yield return request134;
            request134 = null;

            WebTestRequest request135 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/0668bcca-28a9-4e69-9ad6-23ae6420ae27" +
                    "/details");
            request135.Method = "POST";
            request135.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request135.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request135.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request135.QueryStringParameters.Add("format", "json", false, false);
            request135.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:53-0400", false, false);
            StringHttpBody request135Body = new StringHttpBody();
            request135Body.ContentType = "application/json;charset=utf-8";
            request135Body.InsertByteOrderMark = false;
            request135Body.BodyString = "{\"detailFltId\":\"5da5e496-5ed7-4b1b-9a45-1ee2dba5e204\",\"answers\":[{\"detailFltId\":\"" +
                "d8e9db5e-c097-4135-935c-dfc78de16638\"}]}";
            request135.Body = request135Body;
            yield return request135;
            request135 = null;

            WebTestRequest request136 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request136.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request136.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request136.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request136.QueryStringParameters.Add("format", "json", false, false);
            request136.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:54-0400", false, false);
            yield return request136;
            request136 = null;

            WebTestRequest request137 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/28ff1c8e-59b9-446a-8a33-cb02e3c6d172/childre" +
                    "n");
            request137.ThinkTime = 5;
            request137.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request137.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request137.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request137.QueryStringParameters.Add("format", "json", false, false);
            request137.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:54-0400", false, false);
            request137.QueryStringParameters.Add("children", "true", false, false);
            request137.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request137.QueryStringParameters.Add("includeSource", "true", false, false);
            request137.QueryStringParameters.Add("levels", "2", false, false);
            request137.QueryStringParameters.Add("parentFoodFltId", "28ff1c8e-59b9-446a-8a33-cb02e3c6d172", false, false);
            yield return request137;
            request137 = null;

            WebTestRequest request138 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/f28da08a-67ce-4f41-9c6b-8ffdb9dd13d3" +
                    "/details");
            request138.Method = "POST";
            request138.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request138.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request138.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request138.QueryStringParameters.Add("format", "json", false, false);
            request138.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:45:59-0400", false, false);
            StringHttpBody request138Body = new StringHttpBody();
            request138Body.ContentType = "application/json;charset=utf-8";
            request138Body.InsertByteOrderMark = false;
            request138Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request138.Body = request138Body;
            yield return request138;
            request138 = null;

            WebTestRequest request139 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request139.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request139.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request139.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request139.QueryStringParameters.Add("format", "json", false, false);
            request139.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:03-0400", false, false);
            yield return request139;
            request139 = null;

            WebTestRequest request140 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request140.ThinkTime = 14;
            request140.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request140.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request140.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request140.QueryStringParameters.Add("format", "json", false, false);
            request140.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:03-0400", false, false);
            request140.QueryStringParameters.Add("children", "true", false, false);
            request140.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request140.QueryStringParameters.Add("includeSource", "true", false, false);
            request140.QueryStringParameters.Add("levels", "2", false, false);
            request140.QueryStringParameters.Add("parentFoodFltId", "28ff1c8e-59b9-446a-8a33-cb02e3c6d172", false, false);
            yield return request140;
            request140 = null;

            WebTestRequest request141 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/f28da08a-67ce-4f41-9c6b-8ffdb9dd13d3" +
                    "/details");
            request141.Method = "POST";
            request141.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request141.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request141.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request141.QueryStringParameters.Add("format", "json", false, false);
            request141.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:17-0400", false, false);
            StringHttpBody request141Body = new StringHttpBody();
            request141Body.ContentType = "application/json;charset=utf-8";
            request141Body.InsertByteOrderMark = false;
            request141Body.BodyString = "{\"detailFltId\":\"a170a9aa-2ba9-47a9-8674-3dd0ba875797\",\"answers\":[{\"detailFltId\":\"" +
                "d52657e9-f24b-40be-b67c-7a41866aa2ba\"}]}";
            request141.Body = request141Body;
            yield return request141;
            request141 = null;

            WebTestRequest request142 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request142.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request142.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request142.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request142.QueryStringParameters.Add("format", "json", false, false);
            request142.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:17-0400", false, false);
            yield return request142;
            request142 = null;

            WebTestRequest request143 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d52657e9-f24b-40be-b67c-7a41866aa2ba/childre" +
                    "n");
            request143.ThinkTime = 4;
            request143.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request143.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request143.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request143.QueryStringParameters.Add("format", "json", false, false);
            request143.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:18-0400", false, false);
            request143.QueryStringParameters.Add("children", "true", false, false);
            request143.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request143.QueryStringParameters.Add("includeSource", "true", false, false);
            request143.QueryStringParameters.Add("levels", "2", false, false);
            request143.QueryStringParameters.Add("parentFoodFltId", "28ff1c8e-59b9-446a-8a33-cb02e3c6d172", false, false);
            yield return request143;
            request143 = null;

            WebTestRequest request144 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/f28da08a-67ce-4f41-9c6b-8ffdb9dd13d3" +
                    "/details");
            request144.Method = "POST";
            request144.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request144.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request144.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request144.QueryStringParameters.Add("format", "json", false, false);
            request144.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:21-0400", false, false);
            StringHttpBody request144Body = new StringHttpBody();
            request144Body.ContentType = "application/json;charset=utf-8";
            request144Body.InsertByteOrderMark = false;
            request144Body.BodyString = "{\"detailFltId\":\"f00fbc4b-d620-4f72-8c35-ac5f9f81517c\",\"answers\":[{\"detailFltId\":\"" +
                "b3e3e522-e95e-4e6a-b06d-04a64a821e2e\"}]}";
            request144.Body = request144Body;
            yield return request144;
            request144 = null;

            WebTestRequest request145 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request145.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request145.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request145.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request145.QueryStringParameters.Add("format", "json", false, false);
            request145.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:22-0400", false, false);
            yield return request145;
            request145 = null;

            WebTestRequest request146 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/b3e3e522-e95e-4e6a-b06d-04a64a821e2e/childre" +
                    "n");
            request146.ThinkTime = 2;
            request146.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request146.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request146.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request146.QueryStringParameters.Add("format", "json", false, false);
            request146.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:22-0400", false, false);
            request146.QueryStringParameters.Add("children", "true", false, false);
            request146.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request146.QueryStringParameters.Add("includeSource", "true", false, false);
            request146.QueryStringParameters.Add("levels", "2", false, false);
            request146.QueryStringParameters.Add("parentFoodFltId", "28ff1c8e-59b9-446a-8a33-cb02e3c6d172", false, false);
            yield return request146;
            request146 = null;

            WebTestRequest request147 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/f28da08a-67ce-4f41-9c6b-8ffdb9dd13d3" +
                    "/details");
            request147.Method = "POST";
            request147.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request147.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request147.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request147.QueryStringParameters.Add("format", "json", false, false);
            request147.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:24-0400", false, false);
            StringHttpBody request147Body = new StringHttpBody();
            request147Body.ContentType = "application/json;charset=utf-8";
            request147Body.InsertByteOrderMark = false;
            request147Body.BodyString = "{\"detailFltId\":\"244a2415-c69b-4737-b892-500165ae5dcf\",\"answers\":[{\"detailFltId\":\"" +
                "1411ce66-e8fb-4ff5-86d6-810ed1ff7715\"}]}";
            request147.Body = request147Body;
            yield return request147;
            request147 = null;

            WebTestRequest request148 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request148.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request148.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request148.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request148.QueryStringParameters.Add("format", "json", false, false);
            request148.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:24-0400", false, false);
            yield return request148;
            request148 = null;

            WebTestRequest request149 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/1411ce66-e8fb-4ff5-86d6-810ed1ff7715/childre" +
                    "n");
            request149.ThinkTime = 5;
            request149.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request149.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request149.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request149.QueryStringParameters.Add("format", "json", false, false);
            request149.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:25-0400", false, false);
            request149.QueryStringParameters.Add("children", "true", false, false);
            request149.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request149.QueryStringParameters.Add("includeSource", "true", false, false);
            request149.QueryStringParameters.Add("levels", "2", false, false);
            request149.QueryStringParameters.Add("parentFoodFltId", "28ff1c8e-59b9-446a-8a33-cb02e3c6d172", false, false);
            yield return request149;
            request149 = null;

            WebTestRequest request150 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/f28da08a-67ce-4f41-9c6b-8ffdb9dd13d3" +
                    "/details");
            request150.Method = "POST";
            request150.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request150.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request150.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request150.QueryStringParameters.Add("format", "json", false, false);
            request150.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:30-0400", false, false);
            StringHttpBody request150Body = new StringHttpBody();
            request150Body.ContentType = "application/json;charset=utf-8";
            request150Body.InsertByteOrderMark = false;
            request150Body.BodyString = "{\"detailFltId\":\"cc10ed55-1ccb-4cfd-bf2d-fd54063f381f\",\"answers\":[{\"detailFltId\":\"" +
                "3c8482e0-40f4-47c6-a56b-46a5e8ea6bff\"}]}";
            request150.Body = request150Body;
            yield return request150;
            request150 = null;

            WebTestRequest request151 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request151.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request151.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request151.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request151.QueryStringParameters.Add("format", "json", false, false);
            request151.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:30-0400", false, false);
            yield return request151;
            request151 = null;

            WebTestRequest request152 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/006e05c2-c00d-451f-9e12-d1d3f0e22e15/childre" +
                    "n");
            request152.ThinkTime = 4;
            request152.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request152.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request152.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request152.QueryStringParameters.Add("format", "json", false, false);
            request152.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:30-0400", false, false);
            request152.QueryStringParameters.Add("children", "true", false, false);
            request152.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request152.QueryStringParameters.Add("includeSource", "true", false, false);
            request152.QueryStringParameters.Add("levels", "2", false, false);
            request152.QueryStringParameters.Add("parentFoodFltId", "006e05c2-c00d-451f-9e12-d1d3f0e22e15", false, false);
            yield return request152;
            request152 = null;

            WebTestRequest request153 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/a108031c-cef7-456a-bce0-12cb0c53fdb7" +
                    "/details");
            request153.Method = "POST";
            request153.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request153.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request153.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request153.QueryStringParameters.Add("format", "json", false, false);
            request153.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:34-0400", false, false);
            StringHttpBody request153Body = new StringHttpBody();
            request153Body.ContentType = "application/json;charset=utf-8";
            request153Body.InsertByteOrderMark = false;
            request153Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request153.Body = request153Body;
            yield return request153;
            request153 = null;

            WebTestRequest request154 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request154.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request154.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request154.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request154.QueryStringParameters.Add("format", "json", false, false);
            request154.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:36-0400", false, false);
            yield return request154;
            request154 = null;

            WebTestRequest request155 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request155.ThinkTime = 7;
            request155.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request155.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request155.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request155.QueryStringParameters.Add("format", "json", false, false);
            request155.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:36-0400", false, false);
            request155.QueryStringParameters.Add("children", "true", false, false);
            request155.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request155.QueryStringParameters.Add("includeSource", "true", false, false);
            request155.QueryStringParameters.Add("levels", "2", false, false);
            request155.QueryStringParameters.Add("parentFoodFltId", "006e05c2-c00d-451f-9e12-d1d3f0e22e15", false, false);
            yield return request155;
            request155 = null;

            WebTestRequest request156 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/a108031c-cef7-456a-bce0-12cb0c53fdb7" +
                    "/details");
            request156.Method = "POST";
            request156.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request156.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request156.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request156.QueryStringParameters.Add("format", "json", false, false);
            request156.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:43-0400", false, false);
            StringHttpBody request156Body = new StringHttpBody();
            request156Body.ContentType = "application/json;charset=utf-8";
            request156Body.InsertByteOrderMark = false;
            request156Body.BodyString = "{\"detailFltId\":\"d1b311f5-5937-4366-abca-acfccdcafdd9\",\"answers\":[{\"detailFltId\":\"" +
                "d3f100ef-1714-49f5-bc38-8f14fcf97066\"}]}";
            request156.Body = request156Body;
            yield return request156;
            request156 = null;

            WebTestRequest request157 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request157.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request157.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request157.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request157.QueryStringParameters.Add("format", "json", false, false);
            request157.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:43-0400", false, false);
            yield return request157;
            request157 = null;

            WebTestRequest request158 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d3f100ef-1714-49f5-bc38-8f14fcf97066/childre" +
                    "n");
            request158.ThinkTime = 4;
            request158.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request158.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request158.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request158.QueryStringParameters.Add("format", "json", false, false);
            request158.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:43-0400", false, false);
            request158.QueryStringParameters.Add("children", "true", false, false);
            request158.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request158.QueryStringParameters.Add("includeSource", "true", false, false);
            request158.QueryStringParameters.Add("levels", "2", false, false);
            request158.QueryStringParameters.Add("parentFoodFltId", "006e05c2-c00d-451f-9e12-d1d3f0e22e15", false, false);
            yield return request158;
            request158 = null;

            WebTestRequest request159 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/a108031c-cef7-456a-bce0-12cb0c53fdb7" +
                    "/details");
            request159.Method = "POST";
            request159.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request159.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request159.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request159.QueryStringParameters.Add("format", "json", false, false);
            request159.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:47-0400", false, false);
            StringHttpBody request159Body = new StringHttpBody();
            request159Body.ContentType = "application/json;charset=utf-8";
            request159Body.InsertByteOrderMark = false;
            request159Body.BodyString = "{\"detailFltId\":\"5ec1e86d-52d7-414a-be8f-22e30c5dc9d5\",\"answers\":[{\"detailFltId\":\"" +
                "d60bac70-8944-41a5-8cde-d9b8be2f85bf\"}]}";
            request159.Body = request159Body;
            yield return request159;
            request159 = null;

            WebTestRequest request160 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request160.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request160.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request160.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request160.QueryStringParameters.Add("format", "json", false, false);
            request160.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:48-0400", false, false);
            yield return request160;
            request160 = null;

            WebTestRequest request161 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d60bac70-8944-41a5-8cde-d9b8be2f85bf/childre" +
                    "n");
            request161.ThinkTime = 4;
            request161.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request161.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request161.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request161.QueryStringParameters.Add("format", "json", false, false);
            request161.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:48-0400", false, false);
            request161.QueryStringParameters.Add("children", "true", false, false);
            request161.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request161.QueryStringParameters.Add("includeSource", "true", false, false);
            request161.QueryStringParameters.Add("levels", "2", false, false);
            request161.QueryStringParameters.Add("parentFoodFltId", "006e05c2-c00d-451f-9e12-d1d3f0e22e15", false, false);
            yield return request161;
            request161 = null;

            WebTestRequest request162 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/a108031c-cef7-456a-bce0-12cb0c53fdb7" +
                    "/details");
            request162.Method = "POST";
            request162.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request162.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request162.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request162.QueryStringParameters.Add("format", "json", false, false);
            request162.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:52-0400", false, false);
            StringHttpBody request162Body = new StringHttpBody();
            request162Body.ContentType = "application/json;charset=utf-8";
            request162Body.InsertByteOrderMark = false;
            request162Body.BodyString = "{\"detailFltId\":\"57afda5d-a3b5-40e8-a0ee-e71263e6b7b5\",\"answers\":[{\"detailFltId\":\"" +
                "89bf4d63-2f50-49f0-9083-b14add854263\"}]}";
            request162.Body = request162Body;
            yield return request162;
            request162 = null;

            WebTestRequest request163 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request163.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request163.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request163.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request163.QueryStringParameters.Add("format", "json", false, false);
            request163.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:52-0400", false, false);
            yield return request163;
            request163 = null;

            WebTestRequest request164 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/89bf4d63-2f50-49f0-9083-b14add854263/childre" +
                    "n");
            request164.ThinkTime = 4;
            request164.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request164.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request164.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request164.QueryStringParameters.Add("format", "json", false, false);
            request164.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:52-0400", false, false);
            request164.QueryStringParameters.Add("children", "true", false, false);
            request164.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request164.QueryStringParameters.Add("includeSource", "true", false, false);
            request164.QueryStringParameters.Add("levels", "2", false, false);
            request164.QueryStringParameters.Add("parentFoodFltId", "006e05c2-c00d-451f-9e12-d1d3f0e22e15", false, false);
            yield return request164;
            request164 = null;

            WebTestRequest request165 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/6a33a2f1-1684-44ba-9ac4-c2bae21e4096/foods/a108031c-cef7-456a-bce0-12cb0c53fdb7" +
                    "/details");
            request165.Method = "POST";
            request165.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request165.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request165.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request165.QueryStringParameters.Add("format", "json", false, false);
            request165.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:56-0400", false, false);
            StringHttpBody request165Body = new StringHttpBody();
            request165Body.ContentType = "application/json;charset=utf-8";
            request165Body.InsertByteOrderMark = false;
            request165Body.BodyString = "{\"detailFltId\":\"cb74de5f-9a5a-4a82-8f62-951bfad9c829\",\"answers\":[{\"detailFltId\":\"" +
                "3ef93e50-7404-4873-bc6c-f52cf299d266\"}]}";
            request165.Body = request165Body;
            yield return request165;
            request165 = null;

            WebTestRequest request166 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request166.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request166.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request166.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request166.QueryStringParameters.Add("format", "json", false, false);
            request166.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:56-0400", false, false);
            yield return request166;
            request166 = null;

            WebTestRequest request167 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/4a983ce1-db90-41c0-977b-3d0dc8bcc733/childre" +
                    "n");
            request167.ThinkTime = 5;
            request167.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request167.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request167.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request167.QueryStringParameters.Add("format", "json", false, false);
            request167.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:46:56-0400", false, false);
            request167.QueryStringParameters.Add("children", "true", false, false);
            request167.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request167.QueryStringParameters.Add("includeSource", "true", false, false);
            request167.QueryStringParameters.Add("levels", "2", false, false);
            request167.QueryStringParameters.Add("parentFoodFltId", "4a983ce1-db90-41c0-977b-3d0dc8bcc733", false, false);
            yield return request167;
            request167 = null;

            WebTestRequest request168 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/622db71f-3185-4533-80e2-639ddc74b5bb" +
                    "/details");
            request168.Method = "POST";
            request168.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request168.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request168.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request168.QueryStringParameters.Add("format", "json", false, false);
            request168.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:01-0400", false, false);
            StringHttpBody request168Body = new StringHttpBody();
            request168Body.ContentType = "application/json;charset=utf-8";
            request168Body.InsertByteOrderMark = false;
            request168Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request168.Body = request168Body;
            yield return request168;
            request168 = null;

            WebTestRequest request169 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request169.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request169.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request169.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request169.QueryStringParameters.Add("format", "json", false, false);
            request169.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:05-0400", false, false);
            yield return request169;
            request169 = null;

            WebTestRequest request170 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request170.ThinkTime = 4;
            request170.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request170.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request170.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request170.QueryStringParameters.Add("format", "json", false, false);
            request170.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:06-0400", false, false);
            request170.QueryStringParameters.Add("children", "true", false, false);
            request170.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request170.QueryStringParameters.Add("includeSource", "true", false, false);
            request170.QueryStringParameters.Add("levels", "2", false, false);
            request170.QueryStringParameters.Add("parentFoodFltId", "4a983ce1-db90-41c0-977b-3d0dc8bcc733", false, false);
            yield return request170;
            request170 = null;

            WebTestRequest request171 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId 
                + "/meals/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/622db71f-3185-4533-80e2-639ddc74b5bb/details");
            request171.Method = "POST";
            request171.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request171.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request171.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request171.QueryStringParameters.Add("format", "json", false, false);
            request171.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:10-0400", false, false);
            StringHttpBody request171Body = new StringHttpBody();
            request171Body.ContentType = "application/json;charset=utf-8";
            request171Body.InsertByteOrderMark = false;
            request171Body.BodyString = "{\"detailFltId\":\"093e3c51-66b0-4075-ab2a-bf01e1b3a711\",\"answers\":[{\"detailFltId\":\"" +
                "6db7cd47-029a-4b65-b88b-4967d9fa4ab2\"}]}";
            request171.Body = request171Body;
            yield return request171;
            request171 = null;

            WebTestRequest request172 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request172.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request172.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request172.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request172.QueryStringParameters.Add("format", "json", false, false);
            request172.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:10-0400", false, false);
            yield return request172;
            request172 = null;

            WebTestRequest request173 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/6db7cd47-029a-4b65-b88b-4967d9fa4ab2/childre" +
                    "n");
            request173.ThinkTime = 8;
            request173.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request173.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request173.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request173.QueryStringParameters.Add("format", "json", false, false);
            request173.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:10-0400", false, false);
            request173.QueryStringParameters.Add("children", "true", false, false);
            request173.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request173.QueryStringParameters.Add("includeSource", "true", false, false);
            request173.QueryStringParameters.Add("levels", "2", false, false);
            request173.QueryStringParameters.Add("parentFoodFltId", "4a983ce1-db90-41c0-977b-3d0dc8bcc733", false, false);
            yield return request173;
            request173 = null;

            WebTestRequest request174 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/622db71f-3185-4533-80e2-639ddc74b5bb/details");
            request174.Method = "POST";
            request174.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request174.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request174.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request174.QueryStringParameters.Add("format", "json", false, false);
            request174.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:19-0400", false, false);
            StringHttpBody request174Body = new StringHttpBody();
            request174Body.ContentType = "application/json;charset=utf-8";
            request174Body.InsertByteOrderMark = false;
            request174Body.BodyString = "{\"detailFltId\":\"56028929-4e7e-47c7-8828-719dbcdb7981\",\"answers\":[{\"detailFltId\":\"" +
                "64166368-ca9b-4237-827c-fd977d75a7b4\"}]}";
            request174.Body = request174Body;
            yield return request174;
            request174 = null;

            WebTestRequest request175 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request175.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request175.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request175.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request175.QueryStringParameters.Add("format", "json", false, false);
            request175.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:19-0400", false, false);
            yield return request175;
            request175 = null;

            WebTestRequest request176 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/64166368-ca9b-4237-827c-fd977d75a7b4/childre" +
                    "n");
            request176.ThinkTime = 10;
            request176.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request176.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request176.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request176.QueryStringParameters.Add("format", "json", false, false);
            request176.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:19-0400", false, false);
            request176.QueryStringParameters.Add("children", "true", false, false);
            request176.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request176.QueryStringParameters.Add("includeSource", "true", false, false);
            request176.QueryStringParameters.Add("levels", "2", false, false);
            request176.QueryStringParameters.Add("parentFoodFltId", "4a983ce1-db90-41c0-977b-3d0dc8bcc733", false, false);
            yield return request176;
            request176 = null;

            WebTestRequest request177 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/622db71f-3185-4533-80e2-639ddc74b5bb" +
                    "/details");
            request177.Method = "POST";
            request177.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request177.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request177.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request177.QueryStringParameters.Add("format", "json", false, false);
            request177.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:29-0400", false, false);
            StringHttpBody request177Body = new StringHttpBody();
            request177Body.ContentType = "application/json;charset=utf-8";
            request177Body.InsertByteOrderMark = false;
            request177Body.BodyString = "{\"detailFltId\":\"04715b1e-40b7-429f-983e-263e31b22046\",\"answers\":[{\"detailFltId\":\"" +
                "7f0cd5d9-d103-4b34-9bbe-e25886e4462a\",\"answerText\":\"2 \"}]}";
            request177.Body = request177Body;
            yield return request177;
            request177 = null;

            WebTestRequest request178 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request178.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request178.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request178.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request178.QueryStringParameters.Add("format", "json", false, false);
            request178.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:30-0400", false, false);
            yield return request178;
            request178 = null;

            WebTestRequest request179 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/7f0cd5d9-d103-4b34-9bbe-e25886e4462a/childre" +
                    "n");
            request179.ThinkTime = 4;
            request179.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request179.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request179.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request179.QueryStringParameters.Add("format", "json", false, false);
            request179.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:30-0400", false, false);
            request179.QueryStringParameters.Add("children", "true", false, false);
            request179.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request179.QueryStringParameters.Add("includeSource", "true", false, false);
            request179.QueryStringParameters.Add("levels", "2", false, false);
            request179.QueryStringParameters.Add("parentFoodFltId", "4a983ce1-db90-41c0-977b-3d0dc8bcc733", false, false);
            yield return request179;
            request179 = null;

            WebTestRequest request180 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/622db71f-3185-4533-80e2-639ddc74b5bb" +
                    "/details");
            request180.Method = "POST";
            request180.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request180.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request180.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request180.QueryStringParameters.Add("format", "json", false, false);
            request180.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:35-0400", false, false);
            StringHttpBody request180Body = new StringHttpBody();
            request180Body.ContentType = "application/json;charset=utf-8";
            request180Body.InsertByteOrderMark = false;
            request180Body.BodyString = "{\"detailFltId\":\"aac7f49e-d36c-4855-bb25-d12fb3751f90\",\"answers\":[{\"detailFltId\":\"" +
                "eaad8479-eed1-45f8-b165-9a96a5657fcf\"}]}";
            request180.Body = request180Body;
            yield return request180;
            request180 = null;

            WebTestRequest request181 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request181.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request181.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request181.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request181.QueryStringParameters.Add("format", "json", false, false);
            request181.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:38-0400", false, false);
            yield return request181;
            request181 = null;

            WebTestRequest request182 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d873bf97-6dd9-4136-a0d3-3dafa13c7efa/childre" +
                    "n");
            request182.ThinkTime = 4;
            request182.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request182.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request182.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request182.QueryStringParameters.Add("format", "json", false, false);
            request182.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:39-0400", false, false);
            request182.QueryStringParameters.Add("children", "true", false, false);
            request182.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request182.QueryStringParameters.Add("includeSource", "true", false, false);
            request182.QueryStringParameters.Add("levels", "2", false, false);
            request182.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request182;
            request182 = null;

            WebTestRequest request183 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/a5a2690f-fcd3-49b7-8e88-1ddee83e4672" +
                    "/details");
            request183.Method = "POST";
            request183.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request183.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request183.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request183.QueryStringParameters.Add("format", "json", false, false);
            request183.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:43-0400", false, false);
            StringHttpBody request183Body = new StringHttpBody();
            request183Body.ContentType = "application/json;charset=utf-8";
            request183Body.InsertByteOrderMark = false;
            request183Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request183.Body = request183Body;
            yield return request183;
            request183 = null;

            WebTestRequest request184 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request184.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request184.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request184.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request184.QueryStringParameters.Add("format", "json", false, false);
            request184.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:49-0400", false, false);
            yield return request184;
            request184 = null;

            WebTestRequest request185 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request185.ThinkTime = 5;
            request185.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request185.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request185.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request185.QueryStringParameters.Add("format", "json", false, false);
            request185.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:50-0400", false, false);
            request185.QueryStringParameters.Add("children", "true", false, false);
            request185.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request185.QueryStringParameters.Add("includeSource", "true", false, false);
            request185.QueryStringParameters.Add("levels", "2", false, false);
            request185.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request185;
            request185 = null;

            WebTestRequest request186 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/a5a2690f-fcd3-49b7-8e88-1ddee83e4672" +
                    "/details");
            request186.Method = "POST";
            request186.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request186.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request186.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request186.QueryStringParameters.Add("format", "json", false, false);
            request186.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:55-0400", false, false);
            StringHttpBody request186Body = new StringHttpBody();
            request186Body.ContentType = "application/json;charset=utf-8";
            request186Body.InsertByteOrderMark = false;
            request186Body.BodyString = "{\"detailFltId\":\"9a73d6bd-63b0-44dc-a38c-58153e9f5cfc\",\"answers\":[{\"detailFltId\":\"" +
                "c019a9f9-8f8a-421d-81e2-86670884e6e4\"}]}";
            request186.Body = request186Body;
            yield return request186;
            request186 = null;

            WebTestRequest request187 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request187.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request187.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request187.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request187.QueryStringParameters.Add("format", "json", false, false);
            request187.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:55-0400", false, false);
            yield return request187;
            request187 = null;

            WebTestRequest request188 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/c019a9f9-8f8a-421d-81e2-86670884e6e4/childre" +
                    "n");
            request188.ThinkTime = 4;
            request188.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request188.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request188.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request188.QueryStringParameters.Add("format", "json", false, false);
            request188.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:56-0400", false, false);
            request188.QueryStringParameters.Add("children", "true", false, false);
            request188.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request188.QueryStringParameters.Add("includeSource", "true", false, false);
            request188.QueryStringParameters.Add("levels", "2", false, false);
            request188.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request188;
            request188 = null;

            WebTestRequest request189 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/a5a2690f-fcd3-49b7-8e88-1ddee83e4672" +
                    "/details");
            request189.Method = "POST";
            request189.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request189.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request189.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request189.QueryStringParameters.Add("format", "json", false, false);
            request189.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:47:59-0400", false, false);
            StringHttpBody request189Body = new StringHttpBody();
            request189Body.ContentType = "application/json;charset=utf-8";
            request189Body.InsertByteOrderMark = false;
            request189Body.BodyString = "{\"detailFltId\":\"feb959a5-986a-407b-a6ad-149923608de3\",\"answers\":[{\"detailFltId\":\"" +
                "3a9a2073-f2cb-400b-b6c1-07c07b0f8d59\"}]}";
            request189.Body = request189Body;
            yield return request189;
            request189 = null;

            WebTestRequest request190 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request190.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request190.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request190.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request190.QueryStringParameters.Add("format", "json", false, false);
            request190.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:00-0400", false, false);
            yield return request190;
            request190 = null;

            WebTestRequest request191 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/3a9a2073-f2cb-400b-b6c1-07c07b0f8d59/childre" +
                    "n");
            request191.ThinkTime = 4;
            request191.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request191.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request191.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request191.QueryStringParameters.Add("format", "json", false, false);
            request191.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:00-0400", false, false);
            request191.QueryStringParameters.Add("children", "true", false, false);
            request191.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request191.QueryStringParameters.Add("includeSource", "true", false, false);
            request191.QueryStringParameters.Add("levels", "2", false, false);
            request191.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request191;
            request191 = null;

            WebTestRequest request192 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/a5a2690f-fcd3-49b7-8e88-1ddee83e4672" +
                    "/details");
            request192.Method = "POST";
            request192.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request192.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request192.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request192.QueryStringParameters.Add("format", "json", false, false);
            request192.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:04-0400", false, false);
            StringHttpBody request192Body = new StringHttpBody();
            request192Body.ContentType = "application/json;charset=utf-8";
            request192Body.InsertByteOrderMark = false;
            request192Body.BodyString = "{\"detailFltId\":\"b737bf3c-49b7-4436-8379-fe4590d0bef8\",\"answers\":[{\"detailFltId\":\"" +
                "da8bc8e3-01cf-4826-9b60-7d95037ca410\"}]}";
            request192.Body = request192Body;
            yield return request192;
            request192 = null;

            WebTestRequest request193 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request193.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request193.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request193.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request193.QueryStringParameters.Add("format", "json", false, false);
            request193.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:04-0400", false, false);
            yield return request193;
            request193 = null;

            WebTestRequest request194 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/da8bc8e3-01cf-4826-9b60-7d95037ca410/childre" +
                    "n");
            request194.ThinkTime = 3;
            request194.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request194.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request194.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request194.QueryStringParameters.Add("format", "json", false, false);
            request194.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:05-0400", false, false);
            request194.QueryStringParameters.Add("children", "true", false, false);
            request194.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request194.QueryStringParameters.Add("includeSource", "true", false, false);
            request194.QueryStringParameters.Add("levels", "2", false, false);
            request194.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request194;
            request194 = null;

            WebTestRequest request195 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/a5a2690f-fcd3-49b7-8e88-1ddee83e4672" +
                    "/details");
            request195.Method = "POST";
            request195.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request195.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request195.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request195.QueryStringParameters.Add("format", "json", false, false);
            request195.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:08-0400", false, false);
            StringHttpBody request195Body = new StringHttpBody();
            request195Body.ContentType = "application/json;charset=utf-8";
            request195Body.InsertByteOrderMark = false;
            request195Body.BodyString = "{\"detailFltId\":\"f5300bac-27c0-458b-bce9-3b1e342635a0\",\"answers\":[{\"detailFltId\":\"" +
                "4fe9bef5-a2ef-4dbd-9990-0f77f20ccb7d\"}]}";
            request195.Body = request195Body;
            yield return request195;
            request195 = null;

            WebTestRequest request196 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request196.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request196.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request196.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request196.QueryStringParameters.Add("format", "json", false, false);
            request196.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:09-0400", false, false);
            yield return request196;
            request196 = null;

            WebTestRequest request197 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d873bf97-6dd9-4136-a0d3-3dafa13c7efa/childre" +
                    "n");
            request197.ThinkTime = 5;
            request197.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request197.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request197.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request197.QueryStringParameters.Add("format", "json", false, false);
            request197.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:09-0400", false, false);
            request197.QueryStringParameters.Add("children", "true", false, false);
            request197.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request197.QueryStringParameters.Add("includeSource", "true", false, false);
            request197.QueryStringParameters.Add("levels", "2", false, false);
            request197.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request197;
            request197 = null;

            WebTestRequest request198 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/627efe25-2c53-4aea-af07-e2fd126e3ce2" +
                    "/details");
            request198.Method = "POST";
            request198.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request198.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request198.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request198.QueryStringParameters.Add("format", "json", false, false);
            request198.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:14-0400", false, false);
            StringHttpBody request198Body = new StringHttpBody();
            request198Body.ContentType = "application/json;charset=utf-8";
            request198Body.InsertByteOrderMark = false;
            request198Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request198.Body = request198Body;
            yield return request198;
            request198 = null;

            WebTestRequest request199 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request199.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request199.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request199.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request199.QueryStringParameters.Add("format", "json", false, false);
            request199.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:19-0400", false, false);
            yield return request199;
            request199 = null;

            WebTestRequest request200 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request200.ThinkTime = 8;
            request200.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request200.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request200.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request200.QueryStringParameters.Add("format", "json", false, false);
            request200.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:19-0400", false, false);
            request200.QueryStringParameters.Add("children", "true", false, false);
            request200.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request200.QueryStringParameters.Add("includeSource", "true", false, false);
            request200.QueryStringParameters.Add("levels", "2", false, false);
            request200.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request200;
            request200 = null;

            WebTestRequest request201 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/627efe25-2c53-4aea-af07-e2fd126e3ce2" +
                    "/details");
            request201.Method = "POST";
            request201.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request201.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request201.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request201.QueryStringParameters.Add("format", "json", false, false);
            request201.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:27-0400", false, false);
            StringHttpBody request201Body = new StringHttpBody();
            request201Body.ContentType = "application/json;charset=utf-8";
            request201Body.InsertByteOrderMark = false;
            request201Body.BodyString = "{\"detailFltId\":\"9a73d6bd-63b0-44dc-a38c-58153e9f5cfc\",\"answers\":[{\"detailFltId\":\"" +
                "f3994508-17a5-48a8-b355-a4672a543a84\"}]}";
            request201.Body = request201Body;
            yield return request201;
            request201 = null;

            WebTestRequest request202 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request202.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request202.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request202.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request202.QueryStringParameters.Add("format", "json", false, false);
            request202.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:28-0400", false, false);
            yield return request202;
            request202 = null;

            WebTestRequest request203 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/f3994508-17a5-48a8-b355-a4672a543a84/childre" +
                    "n");
            request203.ThinkTime = 7;
            request203.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request203.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request203.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request203.QueryStringParameters.Add("format", "json", false, false);
            request203.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:28-0400", false, false);
            request203.QueryStringParameters.Add("children", "true", false, false);
            request203.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request203.QueryStringParameters.Add("includeSource", "true", false, false);
            request203.QueryStringParameters.Add("levels", "2", false, false);
            request203.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request203;
            request203 = null;

            WebTestRequest request204 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/627efe25-2c53-4aea-af07-e2fd126e3ce2" +
                    "/details");
            request204.Method = "POST";
            request204.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request204.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request204.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request204.QueryStringParameters.Add("format", "json", false, false);
            request204.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:36-0400", false, false);
            StringHttpBody request204Body = new StringHttpBody();
            request204Body.ContentType = "application/json;charset=utf-8";
            request204Body.InsertByteOrderMark = false;
            request204Body.BodyString = "{\"detailFltId\":\"ab7aab94-2973-455c-9a93-012e22784e99\",\"answers\":[{\"detailFltId\":\"" +
                "032db487-715f-447c-9afa-3b4dc85be096\"}]}";
            request204.Body = request204Body;
            yield return request204;
            request204 = null;

            WebTestRequest request205 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request205.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request205.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request205.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request205.QueryStringParameters.Add("format", "json", false, false);
            request205.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:38-0400", false, false);
            yield return request205;
            request205 = null;

            WebTestRequest request206 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/032db487-715f-447c-9afa-3b4dc85be096/childre" +
                    "n");
            request206.ThinkTime = 10;
            request206.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request206.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request206.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request206.QueryStringParameters.Add("format", "json", false, false);
            request206.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:38-0400", false, false);
            request206.QueryStringParameters.Add("children", "true", false, false);
            request206.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request206.QueryStringParameters.Add("includeSource", "true", false, false);
            request206.QueryStringParameters.Add("levels", "2", false, false);
            request206.QueryStringParameters.Add("parentFoodFltId", "d873bf97-6dd9-4136-a0d3-3dafa13c7efa", false, false);
            yield return request206;
            request206 = null;

            WebTestRequest request207 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/627efe25-2c53-4aea-af07-e2fd126e3ce2" +
                    "/details");
            request207.Method = "POST";
            request207.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request207.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request207.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request207.QueryStringParameters.Add("format", "json", false, false);
            request207.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:48-0400", false, false);
            StringHttpBody request207Body = new StringHttpBody();
            request207Body.ContentType = "application/json;charset=utf-8";
            request207Body.InsertByteOrderMark = false;
            request207Body.BodyString = "{\"detailFltId\":\"1037f1d6-b156-4fd2-a337-2d6209c3d985\",\"answers\":[{\"detailFltId\":\"" +
                "abcb6c36-3924-48b3-b52e-73575a2638bb\"}]}";
            request207.Body = request207Body;
            yield return request207;
            request207 = null;

            WebTestRequest request208 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request208.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request208.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request208.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request208.QueryStringParameters.Add("format", "json", false, false);
            request208.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:49-0400", false, false);
            yield return request208;
            request208 = null;

            WebTestRequest request209 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/51218c1d-1dcc-4f3b-865f-637fe10bb3e9/childre" +
                    "n");
            request209.ThinkTime = 4;
            request209.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request209.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request209.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request209.QueryStringParameters.Add("format", "json", false, false);
            request209.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:50-0400", false, false);
            request209.QueryStringParameters.Add("children", "true", false, false);
            request209.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request209.QueryStringParameters.Add("includeSource", "true", false, false);
            request209.QueryStringParameters.Add("levels", "2", false, false);
            request209.QueryStringParameters.Add("parentFoodFltId", "51218c1d-1dcc-4f3b-865f-637fe10bb3e9", false, false);
            yield return request209;
            request209 = null;

            WebTestRequest request210 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/0b30fe85-d2d1-4342-91a7-c1ae67e80a1a/details");
            request210.Method = "POST";
            request210.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request210.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request210.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request210.QueryStringParameters.Add("format", "json", false, false);
            request210.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:48:54-0400", false, false);
            StringHttpBody request210Body = new StringHttpBody();
            request210Body.ContentType = "application/json;charset=utf-8";
            request210Body.InsertByteOrderMark = false;
            request210Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request210.Body = request210Body;
            yield return request210;
            request210 = null;

            WebTestRequest request211 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request211.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request211.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request211.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request211.QueryStringParameters.Add("format", "json", false, false);
            request211.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:00-0400", false, false);
            yield return request211;
            request211 = null;

            WebTestRequest request212 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request212.ThinkTime = 4;
            request212.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request212.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request212.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request212.QueryStringParameters.Add("format", "json", false, false);
            request212.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:01-0400", false, false);
            request212.QueryStringParameters.Add("children", "true", false, false);
            request212.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request212.QueryStringParameters.Add("includeSource", "true", false, false);
            request212.QueryStringParameters.Add("levels", "2", false, false);
            request212.QueryStringParameters.Add("parentFoodFltId", "51218c1d-1dcc-4f3b-865f-637fe10bb3e9", false, false);
            yield return request212;
            request212 = null;

            WebTestRequest request213 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/0b30fe85-d2d1-4342-91a7-c1ae67e80a1a/details");
            request213.Method = "POST";
            request213.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request213.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request213.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request213.QueryStringParameters.Add("format", "json", false, false);
            request213.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:05-0400", false, false);
            StringHttpBody request213Body = new StringHttpBody();
            request213Body.ContentType = "application/json;charset=utf-8";
            request213Body.InsertByteOrderMark = false;
            request213Body.BodyString = "{\"detailFltId\":\"c49f7e26-a089-4e03-ae02-622b4c63ee57\",\"answers\":[{\"detailFltId\":\"" +
                "2ac62b8e-bb1b-4ff6-824d-7f2e4317739d\"}]}";
            request213.Body = request213Body;
            yield return request213;
            request213 = null;

            WebTestRequest request214 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request214.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request214.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request214.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request214.QueryStringParameters.Add("format", "json", false, false);
            request214.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:06-0400", false, false);
            yield return request214;
            request214 = null;

            WebTestRequest request215 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/2ac62b8e-bb1b-4ff6-824d-7f2e4317739d/childre" +
                    "n");
            request215.ThinkTime = 7;
            request215.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request215.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request215.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request215.QueryStringParameters.Add("format", "json", false, false);
            request215.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:07-0400", false, false);
            request215.QueryStringParameters.Add("children", "true", false, false);
            request215.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request215.QueryStringParameters.Add("includeSource", "true", false, false);
            request215.QueryStringParameters.Add("levels", "2", false, false);
            request215.QueryStringParameters.Add("parentFoodFltId", "51218c1d-1dcc-4f3b-865f-637fe10bb3e9", false, false);
            yield return request215;
            request215 = null;

            WebTestRequest request216 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/0b30fe85-d2d1-4342-91a7-c1ae67e80a1a" +
                    "/details");
            request216.Method = "POST";
            request216.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request216.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request216.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request216.QueryStringParameters.Add("format", "json", false, false);
            request216.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:14-0400", false, false);
            StringHttpBody request216Body = new StringHttpBody();
            request216Body.ContentType = "application/json;charset=utf-8";
            request216Body.InsertByteOrderMark = false;
            request216Body.BodyString = "{\"detailFltId\":\"3656bc6a-b4f8-4e2d-a040-d206e58bddc1\",\"answers\":[{\"detailFltId\":\"" +
                "6aa9be9b-f59b-4708-bccb-3e73d5f19942\"}]}";
            request216.Body = request216Body;
            yield return request216;
            request216 = null;

            WebTestRequest request217 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request217.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request217.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request217.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request217.QueryStringParameters.Add("format", "json", false, false);
            request217.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:15-0400", false, false);
            yield return request217;
            request217 = null;

            WebTestRequest request218 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/6aa9be9b-f59b-4708-bccb-3e73d5f19942/childre" +
                    "n");
            request218.ThinkTime = 12;
            request218.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request218.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request218.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request218.QueryStringParameters.Add("format", "json", false, false);
            request218.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:15-0400", false, false);
            request218.QueryStringParameters.Add("children", "true", false, false);
            request218.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request218.QueryStringParameters.Add("includeSource", "true", false, false);
            request218.QueryStringParameters.Add("levels", "2", false, false);
            request218.QueryStringParameters.Add("parentFoodFltId", "51218c1d-1dcc-4f3b-865f-637fe10bb3e9", false, false);
            yield return request218;
            request218 = null;

            WebTestRequest request219 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/0b30fe85-d2d1-4342-91a7-c1ae67e80a1a" +
                    "/details");
            request219.Method = "POST";
            request219.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request219.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request219.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request219.QueryStringParameters.Add("format", "json", false, false);
            request219.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:27-0400", false, false);
            StringHttpBody request219Body = new StringHttpBody();
            request219Body.ContentType = "application/json;charset=utf-8";
            request219Body.InsertByteOrderMark = false;
            request219Body.BodyString = "{\"detailFltId\":\"2c179654-1060-4316-9fd0-0dfe1f4c247e\",\"answers\":[{\"detailFltId\":\"" +
                "03ec56f1-4a72-4f17-ba15-05fbb893afbc\",\"answerText\":\"4 \"}]}";
            request219.Body = request219Body;
            yield return request219;
            request219 = null;

            WebTestRequest request220 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request220.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request220.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request220.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request220.QueryStringParameters.Add("format", "json", false, false);
            request220.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:27-0400", false, false);
            yield return request220;
            request220 = null;

            WebTestRequest request221 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/03ec56f1-4a72-4f17-ba15-05fbb893afbc/childre" +
                    "n");
            request221.ThinkTime = 4;
            request221.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request221.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request221.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request221.QueryStringParameters.Add("format", "json", false, false);
            request221.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:28-0400", false, false);
            request221.QueryStringParameters.Add("children", "true", false, false);
            request221.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request221.QueryStringParameters.Add("includeSource", "true", false, false);
            request221.QueryStringParameters.Add("levels", "2", false, false);
            request221.QueryStringParameters.Add("parentFoodFltId", "51218c1d-1dcc-4f3b-865f-637fe10bb3e9", false, false);
            yield return request221;
            request221 = null;

            WebTestRequest request222 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/0b30fe85-d2d1-4342-91a7-c1ae67e80a1a" +
                    "/details");
            request222.Method = "POST";
            request222.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request222.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request222.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request222.QueryStringParameters.Add("format", "json", false, false);
            request222.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:32-0400", false, false);
            StringHttpBody request222Body = new StringHttpBody();
            request222Body.ContentType = "application/json;charset=utf-8";
            request222Body.InsertByteOrderMark = false;
            request222Body.BodyString = "{\"detailFltId\":\"4383f7d9-fca6-4ef4-b9c9-07d33e1b17c4\",\"answers\":[{\"detailFltId\":\"" +
                "04aa985a-a239-411f-95cc-39e8821b13d8\"}]}";
            request222.Body = request222Body;
            yield return request222;
            request222 = null;

            WebTestRequest request223 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request223.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request223.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request223.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request223.QueryStringParameters.Add("format", "json", false, false);
            request223.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:32-0400", false, false);
            yield return request223;
            request223 = null;

            WebTestRequest request224 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/df9f6e68-7493-4c9e-a0a9-77191f888921/childre" +
                    "n");
            request224.ThinkTime = 4;
            request224.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request224.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request224.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request224.QueryStringParameters.Add("format", "json", false, false);
            request224.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:33-0400", false, false);
            request224.QueryStringParameters.Add("children", "true", false, false);
            request224.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request224.QueryStringParameters.Add("includeSource", "true", false, false);
            request224.QueryStringParameters.Add("levels", "2", false, false);
            request224.QueryStringParameters.Add("parentFoodFltId", "df9f6e68-7493-4c9e-a0a9-77191f888921", false, false);
            yield return request224;
            request224 = null;

            WebTestRequest request225 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/bab4b141-add6-4631-909f-412563150f62" +
                    "/details");
            request225.Method = "POST";
            request225.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request225.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request225.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request225.QueryStringParameters.Add("format", "json", false, false);
            request225.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:37-0400", false, false);
            StringHttpBody request225Body = new StringHttpBody();
            request225Body.ContentType = "application/json;charset=utf-8";
            request225Body.InsertByteOrderMark = false;
            request225Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request225.Body = request225Body;
            yield return request225;
            request225 = null;

            WebTestRequest request226 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request226.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request226.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request226.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request226.QueryStringParameters.Add("format", "json", false, false);
            request226.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:40-0400", false, false);
            yield return request226;
            request226 = null;

            WebTestRequest request227 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request227.ThinkTime = 12;
            request227.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request227.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request227.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request227.QueryStringParameters.Add("format", "json", false, false);
            request227.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:40-0400", false, false);
            request227.QueryStringParameters.Add("children", "true", false, false);
            request227.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request227.QueryStringParameters.Add("includeSource", "true", false, false);
            request227.QueryStringParameters.Add("levels", "2", false, false);
            request227.QueryStringParameters.Add("parentFoodFltId", "df9f6e68-7493-4c9e-a0a9-77191f888921", false, false);
            yield return request227;
            request227 = null;

            WebTestRequest request228 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/bab4b141-add6-4631-909f-412563150f62" +
                    "/details");
            request228.Method = "POST";
            request228.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request228.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request228.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request228.QueryStringParameters.Add("format", "json", false, false);
            request228.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:53-0400", false, false);
            StringHttpBody request228Body = new StringHttpBody();
            request228Body.ContentType = "application/json;charset=utf-8";
            request228Body.InsertByteOrderMark = false;
            request228Body.BodyString = "{\"detailFltId\":\"b35cc4c5-f459-4a28-9196-c0eadae0b477\",\"answers\":[{\"detailFltId\":\"" +
                "ba33680d-0b8f-4f5e-b35f-b5579aef3dd9\"}]}";
            request228.Body = request228Body;
            yield return request228;
            request228 = null;

            WebTestRequest request229 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request229.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request229.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request229.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request229.QueryStringParameters.Add("format", "json", false, false);
            request229.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:53-0400", false, false);
            yield return request229;
            request229 = null;

            WebTestRequest request230 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ba33680d-0b8f-4f5e-b35f-b5579aef3dd9/childre" +
                    "n");
            request230.ThinkTime = 40;
            request230.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request230.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request230.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request230.QueryStringParameters.Add("format", "json", false, false);
            request230.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:49:53-0400", false, false);
            request230.QueryStringParameters.Add("children", "true", false, false);
            request230.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request230.QueryStringParameters.Add("includeSource", "true", false, false);
            request230.QueryStringParameters.Add("levels", "2", false, false);
            request230.QueryStringParameters.Add("parentFoodFltId", "df9f6e68-7493-4c9e-a0a9-77191f888921", false, false);
            yield return request230;
            request230 = null;

            WebTestRequest request231 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/bab4b141-add6-4631-909f-412563150f62" +
                    "/details");
            request231.Method = "POST";
            request231.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request231.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request231.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request231.QueryStringParameters.Add("format", "json", false, false);
            request231.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:33-0400", false, false);
            StringHttpBody request231Body = new StringHttpBody();
            request231Body.ContentType = "application/json;charset=utf-8";
            request231Body.InsertByteOrderMark = false;
            request231Body.BodyString = "{\"detailFltId\":\"bf68ade2-98f6-45c3-8883-5276c039201b\",\"answers\":[{\"detailFltId\":\"" +
                "77aeceac-7c9f-4c69-ac28-da84521e8498\"}]}";
            request231.Body = request231Body;
            yield return request231;
            request231 = null;

            WebTestRequest request232 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request232.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request232.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request232.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request232.QueryStringParameters.Add("format", "json", false, false);
            request232.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:33-0400", false, false);
            yield return request232;
            request232 = null;

            WebTestRequest request233 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/77aeceac-7c9f-4c69-ac28-da84521e8498/childre" +
                    "n");
            request233.ThinkTime = 8;
            request233.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request233.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request233.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request233.QueryStringParameters.Add("format", "json", false, false);
            request233.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:34-0400", false, false);
            request233.QueryStringParameters.Add("children", "true", false, false);
            request233.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request233.QueryStringParameters.Add("includeSource", "true", false, false);
            request233.QueryStringParameters.Add("levels", "2", false, false);
            request233.QueryStringParameters.Add("parentFoodFltId", "df9f6e68-7493-4c9e-a0a9-77191f888921", false, false);
            yield return request233;
            request233 = null;

            WebTestRequest request234 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/bab4b141-add6-4631-909f-412563150f62" +
                    "/details");
            request234.Method = "POST";
            request234.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request234.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request234.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request234.QueryStringParameters.Add("format", "json", false, false);
            request234.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:42-0400", false, false);
            StringHttpBody request234Body = new StringHttpBody();
            request234Body.ContentType = "application/json;charset=utf-8";
            request234Body.InsertByteOrderMark = false;
            request234Body.BodyString = "{\"detailFltId\":\"b8ac9285-9786-4b05-8c72-04797e49d0d3\",\"answers\":[{\"detailFltId\":\"" +
                "4e723af6-853f-4465-8337-cd1c1bcd43ac\"}]}";
            request234.Body = request234Body;
            yield return request234;
            request234 = null;

            WebTestRequest request235 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request235.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request235.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request235.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request235.QueryStringParameters.Add("format", "json", false, false);
            request235.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:42-0400", false, false);
            yield return request235;
            request235 = null;

            WebTestRequest request236 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/4e723af6-853f-4465-8337-cd1c1bcd43ac/childre" +
                    "n");
            request236.ThinkTime = 5;
            request236.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request236.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request236.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request236.QueryStringParameters.Add("format", "json", false, false);
            request236.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:43-0400", false, false);
            request236.QueryStringParameters.Add("children", "true", false, false);
            request236.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request236.QueryStringParameters.Add("includeSource", "true", false, false);
            request236.QueryStringParameters.Add("levels", "2", false, false);
            request236.QueryStringParameters.Add("parentFoodFltId", "df9f6e68-7493-4c9e-a0a9-77191f888921", false, false);
            yield return request236;
            request236 = null;

            WebTestRequest request237 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/bab4b141-add6-4631-909f-412563150f62" +
                    "/details");
            request237.Method = "POST";
            request237.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request237.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request237.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request237.QueryStringParameters.Add("format", "json", false, false);
            request237.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:48-0400", false, false);
            StringHttpBody request237Body = new StringHttpBody();
            request237Body.ContentType = "application/json;charset=utf-8";
            request237Body.InsertByteOrderMark = false;
            request237Body.BodyString = "{\"detailFltId\":\"58728594-a19b-431a-bba8-f6ae953b7f7a\",\"answers\":[{\"detailFltId\":\"" +
                "0d85a002-c759-4657-9d10-c55e929afc6f\"}]}";
            request237.Body = request237Body;
            yield return request237;
            request237 = null;

            WebTestRequest request238 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request238.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request238.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request238.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request238.QueryStringParameters.Add("format", "json", false, false);
            request238.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:49-0400", false, false);
            yield return request238;
            request238 = null;

            WebTestRequest request239 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/2750ffbb-7012-4ba4-9cbf-e0115a30d024/childre" +
                    "n");
            request239.ThinkTime = 4;
            request239.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request239.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request239.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request239.QueryStringParameters.Add("format", "json", false, false);
            request239.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:49-0400", false, false);
            request239.QueryStringParameters.Add("children", "true", false, false);
            request239.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request239.QueryStringParameters.Add("includeSource", "true", false, false);
            request239.QueryStringParameters.Add("levels", "2", false, false);
            request239.QueryStringParameters.Add("parentFoodFltId", "2750ffbb-7012-4ba4-9cbf-e0115a30d024", false, false);
            yield return request239;
            request239 = null;

            WebTestRequest request240 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/ffbcd7ff-8dfc-4d26-b841-8e4e861057f7" +
                    "/details");
            request240.Method = "POST";
            request240.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request240.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request240.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request240.QueryStringParameters.Add("format", "json", false, false);
            request240.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:53-0400", false, false);
            StringHttpBody request240Body = new StringHttpBody();
            request240Body.ContentType = "application/json;charset=utf-8";
            request240Body.InsertByteOrderMark = false;
            request240Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request240.Body = request240Body;
            yield return request240;
            request240 = null;

            WebTestRequest request241 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request241.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request241.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request241.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request241.QueryStringParameters.Add("format", "json", false, false);
            request241.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:54-0400", false, false);
            yield return request241;
            request241 = null;

            WebTestRequest request242 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request242.ThinkTime = 4;
            request242.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request242.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request242.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request242.QueryStringParameters.Add("format", "json", false, false);
            request242.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:54-0400", false, false);
            request242.QueryStringParameters.Add("children", "true", false, false);
            request242.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request242.QueryStringParameters.Add("includeSource", "true", false, false);
            request242.QueryStringParameters.Add("levels", "2", false, false);
            request242.QueryStringParameters.Add("parentFoodFltId", "2750ffbb-7012-4ba4-9cbf-e0115a30d024", false, false);
            yield return request242;
            request242 = null;

            WebTestRequest request243 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/ffbcd7ff-8dfc-4d26-b841-8e4e861057f7" +
                    "/details");
            request243.Method = "POST";
            request243.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request243.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request243.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request243.QueryStringParameters.Add("format", "json", false, false);
            request243.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:58-0400", false, false);
            StringHttpBody request243Body = new StringHttpBody();
            request243Body.ContentType = "application/json;charset=utf-8";
            request243Body.InsertByteOrderMark = false;
            request243Body.BodyString = "{\"detailFltId\":\"b770c6ff-0dfd-4f93-82e1-a643dcb81e8b\",\"answers\":[{\"detailFltId\":\"" +
                "9b70835c-6a6f-4e6f-ba47-102c7abe9445\"}]}";
            request243.Body = request243Body;
            yield return request243;
            request243 = null;

            WebTestRequest request244 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request244.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request244.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request244.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request244.QueryStringParameters.Add("format", "json", false, false);
            request244.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:58-0400", false, false);
            yield return request244;
            request244 = null;

            WebTestRequest request245 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/9b70835c-6a6f-4e6f-ba47-102c7abe9445/childre" +
                    "n");
            request245.ThinkTime = 4;
            request245.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request245.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request245.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request245.QueryStringParameters.Add("format", "json", false, false);
            request245.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:50:58-0400", false, false);
            request245.QueryStringParameters.Add("children", "true", false, false);
            request245.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request245.QueryStringParameters.Add("includeSource", "true", false, false);
            request245.QueryStringParameters.Add("levels", "2", false, false);
            request245.QueryStringParameters.Add("parentFoodFltId", "2750ffbb-7012-4ba4-9cbf-e0115a30d024", false, false);
            yield return request245;
            request245 = null;

            WebTestRequest request246 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/ffbcd7ff-8dfc-4d26-b841-8e4e861057f7" +
                    "/details");
            request246.Method = "POST";
            request246.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request246.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request246.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request246.QueryStringParameters.Add("format", "json", false, false);
            request246.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:03-0400", false, false);
            StringHttpBody request246Body = new StringHttpBody();
            request246Body.ContentType = "application/json;charset=utf-8";
            request246Body.InsertByteOrderMark = false;
            request246Body.BodyString = "{\"detailFltId\":\"e4f0fdf7-7825-4655-b569-33a35cbfb895\",\"answers\":[{\"detailFltId\":\"" +
                "c9fc82f3-7012-4dea-aff3-b4713136958d\"}]}";
            request246.Body = request246Body;
            yield return request246;
            request246 = null;

            WebTestRequest request247 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request247.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request247.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request247.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request247.QueryStringParameters.Add("format", "json", false, false);
            request247.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:03-0400", false, false);
            yield return request247;
            request247 = null;

            WebTestRequest request248 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/c9fc82f3-7012-4dea-aff3-b4713136958d/childre" +
                    "n");
            request248.ThinkTime = 4;
            request248.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request248.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request248.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request248.QueryStringParameters.Add("format", "json", false, false);
            request248.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:04-0400", false, false);
            request248.QueryStringParameters.Add("children", "true", false, false);
            request248.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request248.QueryStringParameters.Add("includeSource", "true", false, false);
            request248.QueryStringParameters.Add("levels", "2", false, false);
            request248.QueryStringParameters.Add("parentFoodFltId", "2750ffbb-7012-4ba4-9cbf-e0115a30d024", false, false);
            yield return request248;
            request248 = null;

            WebTestRequest request249 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/ffbcd7ff-8dfc-4d26-b841-8e4e861057f7" +
                    "/details");
            request249.Method = "POST";
            request249.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request249.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request249.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request249.QueryStringParameters.Add("format", "json", false, false);
            request249.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:07-0400", false, false);
            StringHttpBody request249Body = new StringHttpBody();
            request249Body.ContentType = "application/json;charset=utf-8";
            request249Body.InsertByteOrderMark = false;
            request249Body.BodyString = "{\"detailFltId\":\"c9998d42-c6b8-4a80-b265-6b06d97ee0e6\",\"answers\":[{\"detailFltId\":\"" +
                "73d5721d-9bfe-4171-b94c-bf1e65c7744d\"}]}";
            request249.Body = request249Body;
            yield return request249;
            request249 = null;

            WebTestRequest request250 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request250.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request250.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request250.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request250.QueryStringParameters.Add("format", "json", false, false);
            request250.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:08-0400", false, false);
            yield return request250;
            request250 = null;

            WebTestRequest request251 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/73d5721d-9bfe-4171-b94c-bf1e65c7744d/childre" +
                    "n");
            request251.ThinkTime = 3;
            request251.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request251.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request251.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request251.QueryStringParameters.Add("format", "json", false, false);
            request251.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:08-0400", false, false);
            request251.QueryStringParameters.Add("children", "true", false, false);
            request251.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request251.QueryStringParameters.Add("includeSource", "true", false, false);
            request251.QueryStringParameters.Add("levels", "2", false, false);
            request251.QueryStringParameters.Add("parentFoodFltId", "2750ffbb-7012-4ba4-9cbf-e0115a30d024", false, false);
            yield return request251;
            request251 = null;

            WebTestRequest request252 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/ffbcd7ff-8dfc-4d26-b841-8e4e861057f7" +
                    "/details");
            request252.Method = "POST";
            request252.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request252.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request252.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request252.QueryStringParameters.Add("format", "json", false, false);
            request252.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:11-0400", false, false);
            StringHttpBody request252Body = new StringHttpBody();
            request252Body.ContentType = "application/json;charset=utf-8";
            request252Body.InsertByteOrderMark = false;
            request252Body.BodyString = "{\"detailFltId\":\"58728594-a19b-431a-bba8-f6ae953b7f7a\",\"answers\":[{\"detailFltId\":\"" +
                "0d85a002-c759-4657-9d10-c55e929afc6f\"}]}";
            request252.Body = request252Body;
            yield return request252;
            request252 = null;

            WebTestRequest request253 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request253.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request253.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request253.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request253.QueryStringParameters.Add("format", "json", false, false);
            request253.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:11-0400", false, false);
            yield return request253;
            request253 = null;

            WebTestRequest request254 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/c1b1986b-b985-43e6-a617-53d5166d6583/childre" +
                    "n");
            request254.ThinkTime = 4;
            request254.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request254.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request254.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request254.QueryStringParameters.Add("format", "json", false, false);
            request254.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:11-0400", false, false);
            request254.QueryStringParameters.Add("children", "true", false, false);
            request254.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request254.QueryStringParameters.Add("includeSource", "true", false, false);
            request254.QueryStringParameters.Add("levels", "2", false, false);
            request254.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request254;
            request254 = null;

            WebTestRequest request255 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request255.Method = "POST";
            request255.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request255.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request255.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request255.QueryStringParameters.Add("format", "json", false, false);
            request255.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:16-0400", false, false);
            StringHttpBody request255Body = new StringHttpBody();
            request255Body.ContentType = "application/json;charset=utf-8";
            request255Body.InsertByteOrderMark = false;
            request255Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request255.Body = request255Body;
            yield return request255;
            request255 = null;

            WebTestRequest request256 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request256.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request256.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request256.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request256.QueryStringParameters.Add("format", "json", false, false);
            request256.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:19-0400", false, false);
            yield return request256;
            request256 = null;

            WebTestRequest request257 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request257.ThinkTime = 5;
            request257.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request257.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request257.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request257.QueryStringParameters.Add("format", "json", false, false);
            request257.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:19-0400", false, false);
            request257.QueryStringParameters.Add("children", "true", false, false);
            request257.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request257.QueryStringParameters.Add("includeSource", "true", false, false);
            request257.QueryStringParameters.Add("levels", "2", false, false);
            request257.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request257;
            request257 = null;

            WebTestRequest request258 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request258.Method = "POST";
            request258.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request258.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request258.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request258.QueryStringParameters.Add("format", "json", false, false);
            request258.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:25-0400", false, false);
            StringHttpBody request258Body = new StringHttpBody();
            request258Body.ContentType = "application/json;charset=utf-8";
            request258Body.InsertByteOrderMark = false;
            request258Body.BodyString = "{\"detailFltId\":\"9a135bdd-d04d-4c2a-a11c-f7c3168edc37\",\"answers\":[{\"detailFltId\":\"" +
                "b443a1da-cb65-488f-bfd4-d9081a577811\"}]}";
            request258.Body = request258Body;
            yield return request258;
            request258 = null;

            WebTestRequest request259 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request259.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request259.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request259.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request259.QueryStringParameters.Add("format", "json", false, false);
            request259.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:25-0400", false, false);
            yield return request259;
            request259 = null;

            WebTestRequest request260 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/b443a1da-cb65-488f-bfd4-d9081a577811/childre" +
                    "n");
            request260.ThinkTime = 4;
            request260.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request260.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request260.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request260.QueryStringParameters.Add("format", "json", false, false);
            request260.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:25-0400", false, false);
            request260.QueryStringParameters.Add("children", "true", false, false);
            request260.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request260.QueryStringParameters.Add("includeSource", "true", false, false);
            request260.QueryStringParameters.Add("levels", "2", false, false);
            request260.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request260;
            request260 = null;

            WebTestRequest request261 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request261.Method = "POST";
            request261.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request261.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request261.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request261.QueryStringParameters.Add("format", "json", false, false);
            request261.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:30-0400", false, false);
            StringHttpBody request261Body = new StringHttpBody();
            request261Body.ContentType = "application/json;charset=utf-8";
            request261Body.InsertByteOrderMark = false;
            request261Body.BodyString = "{\"detailFltId\":\"bc4732fa-6106-4aff-a268-154ef409f228\",\"answers\":[{\"detailFltId\":\"" +
                "4124d998-aa3a-4075-8501-2ad3dff42ec0\"}]}";
            request261.Body = request261Body;
            yield return request261;
            request261 = null;

            WebTestRequest request262 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request262.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request262.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request262.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request262.QueryStringParameters.Add("format", "json", false, false);
            request262.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:30-0400", false, false);
            yield return request262;
            request262 = null;

            WebTestRequest request263 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/4124d998-aa3a-4075-8501-2ad3dff42ec0/childre" +
                    "n");
            request263.ThinkTime = 3;
            request263.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request263.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request263.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request263.QueryStringParameters.Add("format", "json", false, false);
            request263.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:30-0400", false, false);
            request263.QueryStringParameters.Add("children", "true", false, false);
            request263.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request263.QueryStringParameters.Add("includeSource", "true", false, false);
            request263.QueryStringParameters.Add("levels", "2", false, false);
            request263.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request263;
            request263 = null;

            WebTestRequest request264 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request264.Method = "POST";
            request264.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request264.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request264.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request264.QueryStringParameters.Add("format", "json", false, false);
            request264.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:34-0400", false, false);
            StringHttpBody request264Body = new StringHttpBody();
            request264Body.ContentType = "application/json;charset=utf-8";
            request264Body.InsertByteOrderMark = false;
            request264Body.BodyString = "{\"detailFltId\":\"7fbc9bfc-0966-4579-bd3c-4c78da7373e8\",\"answers\":[{\"detailFltId\":\"" +
                "6bf772c6-1261-4981-a066-a458120399ce\"}]}";
            request264.Body = request264Body;
            yield return request264;
            request264 = null;

            WebTestRequest request265 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request265.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request265.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request265.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request265.QueryStringParameters.Add("format", "json", false, false);
            request265.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:34-0400", false, false);
            yield return request265;
            request265 = null;

            WebTestRequest request266 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/6bf772c6-1261-4981-a066-a458120399ce/childre" +
                    "n");
            request266.ThinkTime = 3;
            request266.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request266.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request266.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request266.QueryStringParameters.Add("format", "json", false, false);
            request266.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:34-0400", false, false);
            request266.QueryStringParameters.Add("children", "true", false, false);
            request266.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request266.QueryStringParameters.Add("includeSource", "true", false, false);
            request266.QueryStringParameters.Add("levels", "2", false, false);
            request266.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request266;
            request266 = null;

            WebTestRequest request267 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request267.Method = "POST";
            request267.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request267.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request267.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request267.QueryStringParameters.Add("format", "json", false, false);
            request267.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:38-0400", false, false);
            StringHttpBody request267Body = new StringHttpBody();
            request267Body.ContentType = "application/json;charset=utf-8";
            request267Body.InsertByteOrderMark = false;
            request267Body.BodyString = "{\"detailFltId\":\"4d5ec4d5-2b90-4076-87b3-ca27be5b57d2\",\"answers\":[{\"detailFltId\":\"" +
                "c14ca7fc-bece-49cd-b95e-7c12552be7ce\"}]}";
            request267.Body = request267Body;
            yield return request267;
            request267 = null;

            WebTestRequest request268 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request268.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request268.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request268.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request268.QueryStringParameters.Add("format", "json", false, false);
            request268.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:38-0400", false, false);
            yield return request268;
            request268 = null;

            WebTestRequest request269 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/c14ca7fc-bece-49cd-b95e-7c12552be7ce/childre" +
                    "n");
            request269.ThinkTime = 4;
            request269.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request269.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request269.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request269.QueryStringParameters.Add("format", "json", false, false);
            request269.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:38-0400", false, false);
            request269.QueryStringParameters.Add("children", "true", false, false);
            request269.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request269.QueryStringParameters.Add("includeSource", "true", false, false);
            request269.QueryStringParameters.Add("levels", "2", false, false);
            request269.QueryStringParameters.Add("parentFoodFltId", "c1b1986b-b985-43e6-a617-53d5166d6583", false, false);
            yield return request269;
            request269 = null;

            WebTestRequest request270 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/545d8d2c-35ea-4ed7-a26c-9a8249fd9d3b/foods/f7a2e391-416e-4df7-aae2-58d8a0659828" +
                    "/details");
            request270.Method = "POST";
            request270.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request270.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request270.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request270.QueryStringParameters.Add("format", "json", false, false);
            request270.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:42-0400", false, false);
            StringHttpBody request270Body = new StringHttpBody();
            request270Body.ContentType = "application/json;charset=utf-8";
            request270Body.InsertByteOrderMark = false;
            request270Body.BodyString = "{\"detailFltId\":\"c8af52cd-bf36-4d62-a5d2-9009fb03dae8\",\"answers\":[{\"detailFltId\":\"" +
                "d6c1264f-3e59-480f-bea7-3d2e74ca471d\"}]}";
            request270.Body = request270Body;
            yield return request270;
            request270 = null;

            WebTestRequest request271 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request271.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request271.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request271.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request271.QueryStringParameters.Add("format", "json", false, false);
            request271.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:42-0400", false, false);
            yield return request271;
            request271 = null;

            WebTestRequest request272 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/foodEnteredPrompt/Completed");
            request272.ThinkTime = 3;
            request272.Method = "POST";
            request272.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request272.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request272.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request272.QueryStringParameters.Add("format", "json", false, false);
            request272.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:43-0400", false, false);
            StringHttpBody request272Body = new StringHttpBody();
            request272Body.ContentType = "";
            request272Body.InsertByteOrderMark = false;
            request272Body.BodyString = "";
            request272.Body = request272Body;
            yield return request272;
            request272 = null;

            WebTestRequest request273 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request273.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request273.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request273.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request273.QueryStringParameters.Add("fltType", "undefined", false, false);
            request273.QueryStringParameters.Add("format", "json", false, false);
            request273.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:46-0400", false, false);
            yield return request273;
            request273 = null;

            WebTestRequest request274 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request274.ThinkTime = 29;
            request274.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request274.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request274.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request274.QueryStringParameters.Add("format", "json", false, false);
            request274.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:51:46-0400", false, false);
            yield return request274;
            request274 = null;

            WebTestRequest request275 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/fff/completed");
            request275.Method = "POST";
            request275.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request275.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/forgotten-foods"));
            request275.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request275.QueryStringParameters.Add("format", "json", false, false);
            request275.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:52:15-0400", false, false);
            StringHttpBody request275Body = new StringHttpBody();
            request275Body.ContentType = "application/json;charset=utf-8";
            request275Body.InsertByteOrderMark = false;
            request275Body.BodyString = "{\"Water\":true,\"SoftDrinks\":true,\"Alcohol\":false,\"SnacksSweet\":false,\"SnacksSalty\"" +
                ":false,\"FruitVegCheese\":false,\"Breads\":false,\"Supplements\":false,\"AnythingElse\":" +
                "false}";
            request275.Body = request275Body;
            yield return request275;
            request275 = null;

            WebTestRequest request276 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request276.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request276.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/forgotten-foods"));
            request276.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request276.QueryStringParameters.Add("fltType", "undefined", false, false);
            request276.QueryStringParameters.Add("format", "json", false, false);
            request276.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:52:15-0400", false, false);
            yield return request276;
            request276 = null;

            WebTestRequest request277 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request277.ThinkTime = 17;
            request277.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request277.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/forgotten-foods"));
            request277.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request277.QueryStringParameters.Add("format", "json", false, false);
            request277.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:52:15-0400", false, false);
            yield return request277;
            request277 = null;

            WebTestRequest request278 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request278.ThinkTime = 47;
            request278.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request278.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request278.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request278.QueryStringParameters.Add("format", "json", false, false);
            request278.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:52:33-0400", false, false);
            yield return request278;
            request278 = null;

            WebTestRequest request279 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "");
            request279.Method = "POST";
            request279.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request279.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request279.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request279.QueryStringParameters.Add("format", "json", false, false);
            request279.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:20-0400", false, false);
            StringHttpBody request279Body = new StringHttpBody();
            request279Body.ContentType = "application/json;charset=utf-8";
            request279Body.InsertByteOrderMark = false;
            request279Body.BodyString = @"{""mealName"":""Just a Drink"",""date"":""2017-06-14 04:00:00Z"",""time"":""2017-06-15T12:00:33.000Z"",""eatWithAnyone"":""no"",""location"":""home"",""activity"":""[\""none\""]"",""ateWith"":""no"",""mealNameError"":false,""dateError"":false,""timeError"":false,""eatWithAnyoneError"":false,""locationError"":false,""activityError"":false,""ateWithError"":false,""mealTime"":""2017-06-14T08:00:00-0400""}";
            request279.Body = request279Body;
            yield return request279;
            request279 = null;

            WebTestRequest request280 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request280.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request280.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request280.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request280.QueryStringParameters.Add("format", "json", false, false);
            request280.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:23-0400", false, false);
            yield return request280;
            request280 = null;

            WebTestRequest request281 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78");
            request281.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request281.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request281.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request281.QueryStringParameters.Add("format", "json", false, false);
            request281.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:23-0400", false, false);
            yield return request281;
            request281 = null;

            WebTestRequest request282 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request282.ThinkTime = 4;
            request282.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request282.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request282.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request282.QueryStringParameters.Add("fltType", "both", false, false);
            request282.QueryStringParameters.Add("format", "json", false, false);
            request282.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:23-0400", false, false);
            yield return request282;
            request282 = null;

            WebTestRequest request283 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request283.ThinkTime = 6;
            request283.Method = "POST";
            request283.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request283.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request283.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request283.QueryStringParameters.Add("format", "json", false, false);
            request283.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:27-0400", false, false);
            StringHttpBody request283Body = new StringHttpBody();
            request283Body.ContentType = "application/json;charset=utf-8";
            request283Body.InsertByteOrderMark = false;
            request283Body.BodyString = "{\"search\":\"water\",\"fltType\":\"both\"}";
            request283.Body = request283Body;
            yield return request283;
            request283 = null;

            WebTestRequest request284 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request284.ThinkTime = 4;
            request284.Method = "POST";
            request284.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request284.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request284.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request284.QueryStringParameters.Add("format", "json", false, false);
            request284.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:33-0400", false, false);
            StringHttpBody request284Body = new StringHttpBody();
            request284Body.ContentType = "application/json;charset=utf-8";
            request284Body.InsertByteOrderMark = false;
            request284Body.BodyString = "{\"term\":\"water\",\"fltId\":\"46138bc6-b72c-4856-b41a-7659d0522840\",\"selectedFacets\":[" +
                "],\"mealId\":\"a79fbdff-f92e-4107-aa82-919ae4184c78\"}";
            request284.Body = request284Body;
            yield return request284;
            request284 = null;

            WebTestRequest request285 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods");
            request285.Method = "POST";
            request285.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request285.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request285.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request285.QueryStringParameters.Add("format", "json", false, false);
            request285.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:37-0400", false, false);
            StringHttpBody request285Body = new StringHttpBody();
            request285Body.ContentType = "application/json;charset=utf-8";
            request285Body.InsertByteOrderMark = false;
            request285Body.BodyString = "{\"fltId\":\"46138bc6-b72c-4856-b41a-7659d0522840\",\"flt\":\"Water (tap)\",\"facets\":{\"Be" +
                "verages\":[\"Water\"]},\"rank\":0,\"foodFltId\":\"46138bc6-b72c-4856-b41a-7659d0522840\"}" +
                "";
            request285.Body = request285Body;
            yield return request285;
            request285 = null;

            WebTestRequest request286 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request286.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request286.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request286.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request286.QueryStringParameters.Add("format", "json", false, false);
            request286.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:39-0400", false, false);
            yield return request286;
            request286 = null;

            WebTestRequest request287 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78");
            request287.Method = "POST";
            request287.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request287.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request287.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request287.QueryStringParameters.Add("format", "json", false, false);
            request287.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:40-0400", false, false);
            StringHttpBody request287Body = new StringHttpBody();
            request287Body.ContentType = "application/json;charset=utf-8";
            request287Body.InsertByteOrderMark = false;
            request287Body.BodyString = "{\"action\":\"multiIngredientCheck\"}";
            request287.Body = request287Body;
            yield return request287;
            request287 = null;

            WebTestRequest request288 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request288.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request288.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request288.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request288.QueryStringParameters.Add("fltType", "undefined", false, false);
            request288.QueryStringParameters.Add("format", "json", false, false);
            request288.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:41-0400", false, false);
            yield return request288;
            request288 = null;

            WebTestRequest request289 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request289.ThinkTime = 7;
            request289.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request289.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/a79fbdff-f92e-4107-aa82-919ae4184c78"));
            request289.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request289.QueryStringParameters.Add("format", "json", false, false);
            request289.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:41-0400", false, false);
            yield return request289;
            request289 = null;

            WebTestRequest request290 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request290.ThinkTime = 19;
            request290.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request290.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request290.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request290.QueryStringParameters.Add("format", "json", false, false);
            request290.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:53:49-0400", false, false);
            yield return request290;
            request290 = null;

            WebTestRequest request291 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "");
            request291.Method = "POST";
            request291.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request291.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request291.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request291.QueryStringParameters.Add("format", "json", false, false);
            request291.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:08-0400", false, false);
            StringHttpBody request291Body = new StringHttpBody();
            request291Body.ContentType = "application/json;charset=utf-8";
            request291Body.InsertByteOrderMark = false;
            request291Body.BodyString = @"{""mealName"":""Just a Drink"",""date"":""2017-06-14 04:00:00Z"",""time"":""2017-06-15T14:00:49.000Z"",""eatWithAnyone"":""no"",""location"":""work"",""activity"":""[\""computer\""]"",""ateWith"":""no"",""mealNameError"":false,""dateError"":false,""timeError"":false,""eatWithAnyoneError"":false,""locationError"":false,""activityError"":false,""ateWithError"":false,""mealTime"":""2017-06-14T10:00:00-0400""}";
            request291.Body = request291Body;
            yield return request291;
            request291 = null;

            WebTestRequest request292 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request292.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request292.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request292.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request292.QueryStringParameters.Add("format", "json", false, false);
            request292.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:09-0400", false, false);
            yield return request292;
            request292 = null;

            WebTestRequest request293 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e");
            request293.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request293.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request293.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request293.QueryStringParameters.Add("format", "json", false, false);
            request293.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:09-0400", false, false);
            yield return request293;
            request293 = null;

            WebTestRequest request294 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request294.ThinkTime = 3;
            request294.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request294.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request294.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request294.QueryStringParameters.Add("fltType", "both", false, false);
            request294.QueryStringParameters.Add("format", "json", false, false);
            request294.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:09-0400", false, false);
            yield return request294;
            request294 = null;

            WebTestRequest request295 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request295.ThinkTime = 2;
            request295.Method = "POST";
            request295.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request295.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request295.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request295.QueryStringParameters.Add("format", "json", false, false);
            request295.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:12-0400", false, false);
            StringHttpBody request295Body = new StringHttpBody();
            request295Body.ContentType = "application/json;charset=utf-8";
            request295Body.InsertByteOrderMark = false;
            request295Body.BodyString = "{\"search\":\"coffee\",\"fltType\":\"both\"}";
            request295.Body = request295Body;
            yield return request295;
            request295 = null;

            WebTestRequest request296 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request296.ThinkTime = 2;
            request296.Method = "POST";
            request296.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request296.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request296.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request296.QueryStringParameters.Add("format", "json", false, false);
            request296.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:14-0400", false, false);
            StringHttpBody request296Body = new StringHttpBody();
            request296Body.ContentType = "application/json;charset=utf-8";
            request296Body.InsertByteOrderMark = false;
            request296Body.BodyString = "{\"term\":\"coffee\",\"fltId\":\"70997f50-d64a-4b10-a48d-91ab60363ca9\",\"selectedFacets\":" +
                "[],\"mealId\":\"11fda800-198b-4860-9476-ae6f3148709e\"}";
            request296.Body = request296Body;
            yield return request296;
            request296 = null;

            WebTestRequest request297 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods");
            request297.Method = "POST";
            request297.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request297.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request297.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request297.QueryStringParameters.Add("format", "json", false, false);
            request297.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:16-0400", false, false);
            StringHttpBody request297Body = new StringHttpBody();
            request297Body.ContentType = "application/json;charset=utf-8";
            request297Body.InsertByteOrderMark = false;
            request297Body.BodyString = "{\"fltId\":\"70997f50-d64a-4b10-a48d-91ab60363ca9\",\"flt\":\"Coffee\",\"facets\":{\"Beverag" +
                "es\":[\"Coffee, Tea, Hot Chocolate\"]},\"rank\":0,\"foodFltId\":\"70997f50-d64a-4b10-a48" +
                "d-91ab60363ca9\"}";
            request297.Body = request297Body;
            yield return request297;
            request297 = null;

            WebTestRequest request298 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request298.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request298.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request298.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request298.QueryStringParameters.Add("format", "json", false, false);
            request298.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:16-0400", false, false);
            yield return request298;
            request298 = null;

            WebTestRequest request299 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e");
            request299.Method = "POST";
            request299.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request299.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request299.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request299.QueryStringParameters.Add("format", "json", false, false);
            request299.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:17-0400", false, false);
            StringHttpBody request299Body = new StringHttpBody();
            request299Body.ContentType = "application/json;charset=utf-8";
            request299Body.InsertByteOrderMark = false;
            request299Body.BodyString = "{\"action\":\"multiIngredientCheck\"}";
            request299.Body = request299Body;
            yield return request299;
            request299 = null;

            WebTestRequest request300 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request300.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request300.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request300.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request300.QueryStringParameters.Add("fltType", "undefined", false, false);
            request300.QueryStringParameters.Add("format", "json", false, false);
            request300.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:18-0400", false, false);
            yield return request300;
            request300 = null;

            WebTestRequest request301 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request301.ThinkTime = 3;
            request301.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request301.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/11fda800-198b-4860-9476-ae6f3148709e"));
            request301.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request301.QueryStringParameters.Add("format", "json", false, false);
            request301.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:18-0400", false, false);
            yield return request301;
            request301 = null;

            WebTestRequest request302 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/language");
            request302.ThinkTime = 16;
            request302.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request302.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request302.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request302.QueryStringParameters.Add("format", "json", false, false);
            request302.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:22-0400", false, false);
            yield return request302;
            request302 = null;

            WebTestRequest request303 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "");
            request303.Method = "POST";
            request303.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request303.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request303.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request303.QueryStringParameters.Add("format", "json", false, false);
            request303.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:38-0400", false, false);
            StringHttpBody request303Body = new StringHttpBody();
            request303Body.ContentType = "application/json;charset=utf-8";
            request303Body.InsertByteOrderMark = false;
            request303Body.BodyString = @"{""mealName"":""Just a Drink"",""date"":""2017-06-14 04:00:00Z"",""time"":""2017-06-15T18:00:22.000Z"",""eatWithAnyone"":""no"",""location"":""work"",""activity"":""[\""computer\""]"",""ateWith"":""no"",""mealNameError"":false,""dateError"":false,""timeError"":false,""eatWithAnyoneError"":false,""locationError"":false,""activityError"":false,""ateWithError"":false,""mealTime"":""2017-06-14T14:00:00-0400""}";
            request303.Body = request303Body;
            yield return request303;
            request303 = null;

            WebTestRequest request304 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request304.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request304.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request304.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request304.QueryStringParameters.Add("format", "json", false, false);
            request304.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:38-0400", false, false);
            yield return request304;
            request304 = null;

            WebTestRequest request305 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af");
            request305.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request305.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request305.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request305.QueryStringParameters.Add("format", "json", false, false);
            request305.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:38-0400", false, false);
            yield return request305;
            request305 = null;

            WebTestRequest request306 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request306.ThinkTime = 5;
            request306.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request306.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/meal/new"));
            request306.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request306.QueryStringParameters.Add("fltType", "both", false, false);
            request306.QueryStringParameters.Add("format", "json", false, false);
            request306.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:38-0400", false, false);
            yield return request306;
            request306 = null;

            WebTestRequest request307 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/search");
            request307.ThinkTime = 2;
            request307.Method = "POST";
            request307.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request307.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request307.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request307.QueryStringParameters.Add("format", "json", false, false);
            request307.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:43-0400", false, false);
            StringHttpBody request307Body = new StringHttpBody();
            request307Body.ContentType = "application/json;charset=utf-8";
            request307Body.InsertByteOrderMark = false;
            request307Body.BodyString = "{\"search\":\"coffee\",\"fltType\":\"both\"}";
            request307.Body = request307Body;
            yield return request307;
            request307 = null;

            WebTestRequest request308 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/searchresults");
            request308.ThinkTime = 1;
            request308.Method = "POST";
            request308.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request308.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request308.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request308.QueryStringParameters.Add("format", "json", false, false);
            request308.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:45-0400", false, false);
            StringHttpBody request308Body = new StringHttpBody();
            request308Body.ContentType = "application/json;charset=utf-8";
            request308Body.InsertByteOrderMark = false;
            request308Body.BodyString = "{\"term\":\"coffee\",\"fltId\":\"70997f50-d64a-4b10-a48d-91ab60363ca9\",\"selectedFacets\":" +
                "[],\"mealId\":\"362355a5-0408-4ea4-b5d1-65eb55e152af\"}";
            request308.Body = request308Body;
            yield return request308;
            request308 = null;

            WebTestRequest request309 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods");
            request309.Method = "POST";
            request309.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request309.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request309.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request309.QueryStringParameters.Add("format", "json", false, false);
            request309.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:46-0400", false, false);
            StringHttpBody request309Body = new StringHttpBody();
            request309Body.ContentType = "application/json;charset=utf-8";
            request309Body.InsertByteOrderMark = false;
            request309Body.BodyString = "{\"fltId\":\"70997f50-d64a-4b10-a48d-91ab60363ca9\",\"flt\":\"Coffee\",\"facets\":{\"Beverag" +
                "es\":[\"Coffee, Tea, Hot Chocolate\"]},\"rank\":0,\"foodFltId\":\"70997f50-d64a-4b10-a48" +
                "d-91ab60363ca9\"}";
            request309.Body = request309Body;
            yield return request309;
            request309 = null;

            WebTestRequest request310 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request310.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request310.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request310.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request310.QueryStringParameters.Add("format", "json", false, false);
            request310.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:47-0400", false, false);
            yield return request310;
            request310 = null;

            WebTestRequest request311 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af");
            request311.Method = "POST";
            request311.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request311.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request311.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request311.QueryStringParameters.Add("format", "json", false, false);
            request311.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:47-0400", false, false);
            StringHttpBody request311Body = new StringHttpBody();
            request311Body.ContentType = "application/json;charset=utf-8";
            request311Body.InsertByteOrderMark = false;
            request311Body.BodyString = "{\"action\":\"multiIngredientCheck\"}";
            request311.Body = request311Body;
            yield return request311;
            request311 = null;

            WebTestRequest request312 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request312.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request312.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request312.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request312.QueryStringParameters.Add("fltType", "undefined", false, false);
            request312.QueryStringParameters.Add("format", "json", false, false);
            request312.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:48-0400", false, false);
            yield return request312;
            request312 = null;

            WebTestRequest request313 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request313.ThinkTime = 4;
            request313.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request313.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/find-food/362355a5-0408-4ea4-b5d1-65eb55e152af"));
            request313.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request313.QueryStringParameters.Add("format", "json", false, false);
            request313.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:48-0400", false, false);
            yield return request313;
            request313 = null;

            WebTestRequest request314 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request314.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request314.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/my-food-and-drinks"));
            request314.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request314.QueryStringParameters.Add("format", "json", false, false);
            request314.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:53-0400", false, false);
            yield return request314;
            request314 = null;

            WebTestRequest request315 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/46138bc6-b72c-4856-b41a-7659d0522840/childre" +
                    "n");
            request315.ThinkTime = 18;
            request315.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request315.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request315.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request315.QueryStringParameters.Add("format", "json", false, false);
            request315.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:54:53-0400", false, false);
            request315.QueryStringParameters.Add("children", "true", false, false);
            request315.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request315.QueryStringParameters.Add("includeSource", "true", false, false);
            request315.QueryStringParameters.Add("levels", "2", false, false);
            request315.QueryStringParameters.Add("parentFoodFltId", "46138bc6-b72c-4856-b41a-7659d0522840", false, false);
            yield return request315;
            request315 = null;

            WebTestRequest request316 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods/8d70aac5-c57f-4313-86b9-f2b257c4a187" +
                    "/details");
            request316.Method = "POST";
            request316.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request316.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request316.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request316.QueryStringParameters.Add("format", "json", false, false);
            request316.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:11-0400", false, false);
            StringHttpBody request316Body = new StringHttpBody();
            request316Body.ContentType = "application/json;charset=utf-8";
            request316Body.InsertByteOrderMark = false;
            request316Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "4284d122-d8c5-42cf-9754-8d5a5d72ac6e\"}]}";
            request316.Body = request316Body;
            yield return request316;
            request316 = null;

            WebTestRequest request317 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request317.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request317.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request317.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request317.QueryStringParameters.Add("format", "json", false, false);
            request317.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:13-0400", false, false);
            yield return request317;
            request317 = null;

            WebTestRequest request318 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/4284d122-d8c5-42cf-9754-8d5a5d72ac6e/childre" +
                    "n");
            request318.ThinkTime = 6;
            request318.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request318.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request318.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request318.QueryStringParameters.Add("format", "json", false, false);
            request318.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:13-0400", false, false);
            request318.QueryStringParameters.Add("children", "true", false, false);
            request318.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request318.QueryStringParameters.Add("includeSource", "true", false, false);
            request318.QueryStringParameters.Add("levels", "2", false, false);
            request318.QueryStringParameters.Add("parentFoodFltId", "46138bc6-b72c-4856-b41a-7659d0522840", false, false);
            yield return request318;
            request318 = null;

            WebTestRequest request319 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods/8d70aac5-c57f-4313-86b9-f2b257c4a187" +
                    "/details");
            request319.Method = "POST";
            request319.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request319.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request319.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request319.QueryStringParameters.Add("format", "json", false, false);
            request319.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:20-0400", false, false);
            StringHttpBody request319Body = new StringHttpBody();
            request319Body.ContentType = "application/json;charset=utf-8";
            request319Body.InsertByteOrderMark = false;
            request319Body.BodyString = "{\"detailFltId\":\"a916e228-9c57-4e83-8a1d-a4d89d559e36\",\"answers\":[{\"detailFltId\":\"" +
                "f9e9fdc9-15f6-4bb8-b940-b366cd462058\"}]}";
            request319.Body = request319Body;
            yield return request319;
            request319 = null;

            WebTestRequest request320 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request320.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request320.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request320.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request320.QueryStringParameters.Add("format", "json", false, false);
            request320.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:20-0400", false, false);
            yield return request320;
            request320 = null;

            WebTestRequest request321 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/f9e9fdc9-15f6-4bb8-b940-b366cd462058/childre" +
                    "n");
            request321.ThinkTime = 4;
            request321.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request321.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request321.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request321.QueryStringParameters.Add("format", "json", false, false);
            request321.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:20-0400", false, false);
            request321.QueryStringParameters.Add("children", "true", false, false);
            request321.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request321.QueryStringParameters.Add("includeSource", "true", false, false);
            request321.QueryStringParameters.Add("levels", "2", false, false);
            request321.QueryStringParameters.Add("parentFoodFltId", "46138bc6-b72c-4856-b41a-7659d0522840", false, false);
            yield return request321;
            request321 = null;

            WebTestRequest request322 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods/8d70aac5-c57f-4313-86b9-f2b257c4a187" +
                    "/details");
            request322.Method = "POST";
            request322.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request322.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request322.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request322.QueryStringParameters.Add("format", "json", false, false);
            request322.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:24-0400", false, false);
            StringHttpBody request322Body = new StringHttpBody();
            request322Body.ContentType = "application/json;charset=utf-8";
            request322Body.InsertByteOrderMark = false;
            request322Body.BodyString = "{\"detailFltId\":\"6bf887b0-9f90-4e0d-aadc-7adaff88dc26\",\"answers\":[{\"detailFltId\":\"" +
                "f3d275b7-4f0c-4940-b634-58964c150866\"}]}";
            request322.Body = request322Body;
            yield return request322;
            request322 = null;

            WebTestRequest request323 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request323.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request323.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request323.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request323.QueryStringParameters.Add("format", "json", false, false);
            request323.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:24-0400", false, false);
            yield return request323;
            request323 = null;

            WebTestRequest request324 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/f3d275b7-4f0c-4940-b634-58964c150866/childre" +
                    "n");
            request324.ThinkTime = 5;
            request324.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request324.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request324.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request324.QueryStringParameters.Add("format", "json", false, false);
            request324.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:25-0400", false, false);
            request324.QueryStringParameters.Add("children", "true", false, false);
            request324.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request324.QueryStringParameters.Add("includeSource", "true", false, false);
            request324.QueryStringParameters.Add("levels", "2", false, false);
            request324.QueryStringParameters.Add("parentFoodFltId", "46138bc6-b72c-4856-b41a-7659d0522840", false, false);
            yield return request324;
            request324 = null;

            WebTestRequest request325 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods/8d70aac5-c57f-4313-86b9-f2b257c4a187" +
                    "/details");
            request325.Method = "POST";
            request325.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request325.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request325.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request325.QueryStringParameters.Add("format", "json", false, false);
            request325.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:29-0400", false, false);
            StringHttpBody request325Body = new StringHttpBody();
            request325Body.ContentType = "application/json;charset=utf-8";
            request325Body.InsertByteOrderMark = false;
            request325Body.BodyString = "{\"detailFltId\":\"5349425f-8ac8-4ae8-836c-22ac56c712e2\",\"answers\":[{\"detailFltId\":\"" +
                "0f35ec31-037d-4837-810a-84ffd7002c80\"}]}";
            request325.Body = request325Body;
            yield return request325;
            request325 = null;

            WebTestRequest request326 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request326.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request326.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request326.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request326.QueryStringParameters.Add("format", "json", false, false);
            request326.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:30-0400", false, false);
            yield return request326;
            request326 = null;

            WebTestRequest request327 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/0f35ec31-037d-4837-810a-84ffd7002c80/childre" +
                    "n");
            request327.ThinkTime = 5;
            request327.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request327.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request327.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request327.QueryStringParameters.Add("format", "json", false, false);
            request327.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:30-0400", false, false);
            request327.QueryStringParameters.Add("children", "true", false, false);
            request327.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request327.QueryStringParameters.Add("includeSource", "true", false, false);
            request327.QueryStringParameters.Add("levels", "2", false, false);
            request327.QueryStringParameters.Add("parentFoodFltId", "46138bc6-b72c-4856-b41a-7659d0522840", false, false);
            yield return request327;
            request327 = null;

            WebTestRequest request328 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/a79fbdff-f92e-4107-aa82-919ae4184c78/foods/8d70aac5-c57f-4313-86b9-f2b257c4a187" +
                    "/details");
            request328.Method = "POST";
            request328.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request328.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request328.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request328.QueryStringParameters.Add("format", "json", false, false);
            request328.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:35-0400", false, false);
            StringHttpBody request328Body = new StringHttpBody();
            request328Body.ContentType = "application/json;charset=utf-8";
            request328Body.InsertByteOrderMark = false;
            request328Body.BodyString = "{\"detailFltId\":\"63aa1fcc-8ae4-42da-8974-0dde4d513575\",\"answers\":[{\"detailFltId\":\"" +
                "3cb5a9c7-5ef7-4d13-b943-98ace270dd3f\"}]}";
            request328.Body = request328Body;
            yield return request328;
            request328 = null;

            WebTestRequest request329 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request329.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request329.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request329.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request329.QueryStringParameters.Add("format", "json", false, false);
            request329.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:35-0400", false, false);
            yield return request329;
            request329 = null;

            WebTestRequest request330 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/70997f50-d64a-4b10-a48d-91ab60363ca9/childre" +
                    "n");
            request330.ThinkTime = 8;
            request330.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request330.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request330.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request330.QueryStringParameters.Add("format", "json", false, false);
            request330.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:36-0400", false, false);
            request330.QueryStringParameters.Add("children", "true", false, false);
            request330.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request330.QueryStringParameters.Add("includeSource", "true", false, false);
            request330.QueryStringParameters.Add("levels", "2", false, false);
            request330.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request330;
            request330 = null;

            WebTestRequest request331 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request331.Method = "POST";
            request331.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request331.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request331.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request331.QueryStringParameters.Add("format", "json", false, false);
            request331.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:44-0400", false, false);
            StringHttpBody request331Body = new StringHttpBody();
            request331Body.ContentType = "application/json;charset=utf-8";
            request331Body.InsertByteOrderMark = false;
            request331Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "ac032cf1-1ac3-4707-b21c-f52573db6cff\"}]}";
            request331.Body = request331Body;
            yield return request331;
            request331 = null;

            WebTestRequest request332 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request332.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request332.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request332.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request332.QueryStringParameters.Add("format", "json", false, false);
            request332.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:45-0400", false, false);
            yield return request332;
            request332 = null;

            WebTestRequest request333 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/ac032cf1-1ac3-4707-b21c-f52573db6cff/childre" +
                    "n");
            request333.ThinkTime = 17;
            request333.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request333.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request333.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request333.QueryStringParameters.Add("format", "json", false, false);
            request333.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:55:46-0400", false, false);
            request333.QueryStringParameters.Add("children", "true", false, false);
            request333.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request333.QueryStringParameters.Add("includeSource", "true", false, false);
            request333.QueryStringParameters.Add("levels", "2", false, false);
            request333.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request333;
            request333 = null;

            WebTestRequest request334 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request334.Method = "POST";
            request334.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request334.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request334.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request334.QueryStringParameters.Add("format", "json", false, false);
            request334.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:03-0400", false, false);
            StringHttpBody request334Body = new StringHttpBody();
            request334Body.ContentType = "application/json;charset=utf-8";
            request334Body.InsertByteOrderMark = false;
            request334Body.BodyString = "{\"detailFltId\":\"7da556ee-2db7-4dcb-803b-b62186db483b\",\"answers\":[{\"detailFltId\":\"" +
                "78cf08e0-23b9-4973-8d24-a10cdabd1870\"}]}";
            request334.Body = request334Body;
            yield return request334;
            request334 = null;

            WebTestRequest request335 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request335.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request335.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request335.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request335.QueryStringParameters.Add("format", "json", false, false);
            request335.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:03-0400", false, false);
            yield return request335;
            request335 = null;

            WebTestRequest request336 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/78cf08e0-23b9-4973-8d24-a10cdabd1870/childre" +
                    "n");
            request336.ThinkTime = 3;
            request336.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request336.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request336.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request336.QueryStringParameters.Add("format", "json", false, false);
            request336.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:04-0400", false, false);
            request336.QueryStringParameters.Add("children", "true", false, false);
            request336.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request336.QueryStringParameters.Add("includeSource", "true", false, false);
            request336.QueryStringParameters.Add("levels", "2", false, false);
            request336.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request336;
            request336 = null;

            WebTestRequest request337 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request337.Method = "POST";
            request337.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request337.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request337.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request337.QueryStringParameters.Add("format", "json", false, false);
            request337.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:07-0400", false, false);
            StringHttpBody request337Body = new StringHttpBody();
            request337Body.ContentType = "application/json;charset=utf-8";
            request337Body.InsertByteOrderMark = false;
            request337Body.BodyString = "{\"detailFltId\":\"c5277f8d-a89d-4c40-8497-83a5e158baae\",\"answers\":[{\"detailFltId\":\"" +
                "d7e973bd-6fc2-4984-83ea-6a7c80f332b2\"}]}";
            request337.Body = request337Body;
            yield return request337;
            request337 = null;

            WebTestRequest request338 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request338.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request338.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request338.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request338.QueryStringParameters.Add("format", "json", false, false);
            request338.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:07-0400", false, false);
            yield return request338;
            request338 = null;

            WebTestRequest request339 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d7e973bd-6fc2-4984-83ea-6a7c80f332b2/childre" +
                    "n");
            request339.ThinkTime = 8;
            request339.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request339.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request339.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request339.QueryStringParameters.Add("format", "json", false, false);
            request339.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:07-0400", false, false);
            request339.QueryStringParameters.Add("children", "true", false, false);
            request339.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request339.QueryStringParameters.Add("includeSource", "true", false, false);
            request339.QueryStringParameters.Add("levels", "2", false, false);
            request339.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request339;
            request339 = null;

            WebTestRequest request340 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request340.Method = "POST";
            request340.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request340.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request340.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request340.QueryStringParameters.Add("format", "json", false, false);
            request340.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:15-0400", false, false);
            StringHttpBody request340Body = new StringHttpBody();
            request340Body.ContentType = "application/json;charset=utf-8";
            request340Body.InsertByteOrderMark = false;
            request340Body.BodyString = "{\"detailFltId\":\"e62101ca-d150-4ded-95e3-3b4f0ffb7672\",\"answers\":[{\"detailFltId\":\"" +
                "6cf0e9b1-0678-4b32-860e-1fad3baa08ff\"}]}";
            request340.Body = request340Body;
            yield return request340;
            request340 = null;

            WebTestRequest request341 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request341.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request341.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request341.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request341.QueryStringParameters.Add("format", "json", false, false);
            request341.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:15-0400", false, false);
            yield return request341;
            request341 = null;

            WebTestRequest request342 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/6cf0e9b1-0678-4b32-860e-1fad3baa08ff/childre" +
                    "n");
            request342.ThinkTime = 5;
            request342.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request342.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request342.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request342.QueryStringParameters.Add("format", "json", false, false);
            request342.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:16-0400", false, false);
            request342.QueryStringParameters.Add("children", "true", false, false);
            request342.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request342.QueryStringParameters.Add("includeSource", "true", false, false);
            request342.QueryStringParameters.Add("levels", "2", false, false);
            request342.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request342;
            request342 = null;

            WebTestRequest request343 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request343.Method = "POST";
            request343.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request343.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request343.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request343.QueryStringParameters.Add("format", "json", false, false);
            request343.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:21-0400", false, false);
            StringHttpBody request343Body = new StringHttpBody();
            request343Body.ContentType = "application/json;charset=utf-8";
            request343Body.InsertByteOrderMark = false;
            request343Body.BodyString = "{\"detailFltId\":\"4a6ce527-a149-4ce2-b193-28822f0e06cf\",\"answers\":[{\"detailFltId\":\"" +
                "d02d3731-4aa8-41ac-8754-fa0d14fb7693\"}]}";
            request343.Body = request343Body;
            yield return request343;
            request343 = null;

            WebTestRequest request344 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request344.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request344.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request344.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request344.QueryStringParameters.Add("format", "json", false, false);
            request344.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:22-0400", false, false);
            yield return request344;
            request344 = null;

            WebTestRequest request345 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d02d3731-4aa8-41ac-8754-fa0d14fb7693/childre" +
                    "n");
            request345.ThinkTime = 3;
            request345.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request345.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request345.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request345.QueryStringParameters.Add("format", "json", false, false);
            request345.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:22-0400", false, false);
            request345.QueryStringParameters.Add("children", "true", false, false);
            request345.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request345.QueryStringParameters.Add("includeSource", "true", false, false);
            request345.QueryStringParameters.Add("levels", "2", false, false);
            request345.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request345;
            request345 = null;

            WebTestRequest request346 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request346.Method = "POST";
            request346.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request346.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request346.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request346.QueryStringParameters.Add("format", "json", false, false);
            request346.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:26-0400", false, false);
            StringHttpBody request346Body = new StringHttpBody();
            request346Body.ContentType = "application/json;charset=utf-8";
            request346Body.InsertByteOrderMark = false;
            request346Body.BodyString = "{\"detailFltId\":\"93023d95-fd48-4c03-b97a-1229c4e6660b\",\"answers\":[{\"detailFltId\":\"" +
                "bd2b505e-d806-4d4a-a8b4-d1ecdf9a4b94\"}]}";
            request346.Body = request346Body;
            yield return request346;
            request346 = null;

            WebTestRequest request347 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request347.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request347.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request347.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request347.QueryStringParameters.Add("format", "json", false, false);
            request347.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:26-0400", false, false);
            yield return request347;
            request347 = null;

            WebTestRequest request348 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/bd2b505e-d806-4d4a-a8b4-d1ecdf9a4b94/childre" +
                    "n");
            request348.ThinkTime = 5;
            request348.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request348.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request348.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request348.QueryStringParameters.Add("format", "json", false, false);
            request348.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:27-0400", false, false);
            request348.QueryStringParameters.Add("children", "true", false, false);
            request348.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request348.QueryStringParameters.Add("includeSource", "true", false, false);
            request348.QueryStringParameters.Add("levels", "2", false, false);
            request348.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request348;
            request348 = null;

            WebTestRequest request349 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/11fda800-198b-4860-9476-ae6f3148709e/foods/fa749f0b-8a66-4ffb-8d25-0008ca10766f" +
                    "/details");
            request349.Method = "POST";
            request349.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request349.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request349.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request349.QueryStringParameters.Add("format", "json", false, false);
            request349.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:31-0400", false, false);
            StringHttpBody request349Body = new StringHttpBody();
            request349Body.ContentType = "application/json;charset=utf-8";
            request349Body.InsertByteOrderMark = false;
            request349Body.BodyString = "{\"detailFltId\":\"e160b478-f6e0-4257-92ad-cd82590e63b3\",\"answers\":[{\"detailFltId\":\"" +
                "c5d102be-9503-4f40-a87a-8f0fbf71541a\"}]}";
            request349.Body = request349Body;
            yield return request349;
            request349 = null;

            WebTestRequest request350 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request350.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request350.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request350.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request350.QueryStringParameters.Add("format", "json", false, false);
            request350.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:32-0400", false, false);
            yield return request350;
            request350 = null;

            WebTestRequest request351 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/70997f50-d64a-4b10-a48d-91ab60363ca9/childre" +
                    "n");
            request351.ThinkTime = 33;
            request351.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request351.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request351.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request351.QueryStringParameters.Add("format", "json", false, false);
            request351.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:56:32-0400", false, false);
            request351.QueryStringParameters.Add("children", "true", false, false);
            request351.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request351.QueryStringParameters.Add("includeSource", "true", false, false);
            request351.QueryStringParameters.Add("levels", "2", false, false);
            request351.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request351;
            request351 = null;

            WebTestRequest request352 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request352.Method = "POST";
            request352.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request352.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request352.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request352.QueryStringParameters.Add("format", "json", false, false);
            request352.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:06-0400", false, false);
            StringHttpBody request352Body = new StringHttpBody();
            request352Body.ContentType = "application/json;charset=utf-8";
            request352Body.InsertByteOrderMark = false;
            request352Body.BodyString = "{\"detailFltId\":\"1649ae01-a61d-4f2e-ad99-f54390a120df\",\"answers\":[{\"detailFltId\":\"" +
                "0f5cd148-58ca-4272-a8f9-f3c68021829d\",\"answerText\":\"office coffee pot\"}]}";
            request352.Body = request352Body;
            yield return request352;
            request352 = null;

            WebTestRequest request353 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request353.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request353.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request353.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request353.QueryStringParameters.Add("format", "json", false, false);
            request353.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:08-0400", false, false);
            yield return request353;
            request353 = null;

            WebTestRequest request354 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/0f5cd148-58ca-4272-a8f9-f3c68021829d/childre" +
                    "n");
            request354.ThinkTime = 18;
            request354.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request354.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request354.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request354.QueryStringParameters.Add("format", "json", false, false);
            request354.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:08-0400", false, false);
            request354.QueryStringParameters.Add("children", "true", false, false);
            request354.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request354.QueryStringParameters.Add("includeSource", "true", false, false);
            request354.QueryStringParameters.Add("levels", "2", false, false);
            request354.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request354;
            request354 = null;

            WebTestRequest request355 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request355.Method = "POST";
            request355.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request355.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request355.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request355.QueryStringParameters.Add("format", "json", false, false);
            request355.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:26-0400", false, false);
            StringHttpBody request355Body = new StringHttpBody();
            request355Body.ContentType = "application/json;charset=utf-8";
            request355Body.InsertByteOrderMark = false;
            request355Body.BodyString = "{\"detailFltId\":\"7da556ee-2db7-4dcb-803b-b62186db483b\",\"answers\":[{\"detailFltId\":\"" +
                "78cf08e0-23b9-4973-8d24-a10cdabd1870\"}]}";
            request355.Body = request355Body;
            yield return request355;
            request355 = null;

            WebTestRequest request356 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request356.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request356.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request356.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request356.QueryStringParameters.Add("format", "json", false, false);
            request356.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:26-0400", false, false);
            yield return request356;
            request356 = null;

            WebTestRequest request357 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/78cf08e0-23b9-4973-8d24-a10cdabd1870/childre" +
                    "n");
            request357.ThinkTime = 5;
            request357.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request357.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request357.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request357.QueryStringParameters.Add("format", "json", false, false);
            request357.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:26-0400", false, false);
            request357.QueryStringParameters.Add("children", "true", false, false);
            request357.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request357.QueryStringParameters.Add("includeSource", "true", false, false);
            request357.QueryStringParameters.Add("levels", "2", false, false);
            request357.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request357;
            request357 = null;

            WebTestRequest request358 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request358.Method = "POST";
            request358.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request358.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request358.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request358.QueryStringParameters.Add("format", "json", false, false);
            request358.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:31-0400", false, false);
            StringHttpBody request358Body = new StringHttpBody();
            request358Body.ContentType = "application/json;charset=utf-8";
            request358Body.InsertByteOrderMark = false;
            request358Body.BodyString = "{\"detailFltId\":\"c5277f8d-a89d-4c40-8497-83a5e158baae\",\"answers\":[{\"detailFltId\":\"" +
                "d7e973bd-6fc2-4984-83ea-6a7c80f332b2\"}]}";
            request358.Body = request358Body;
            yield return request358;
            request358 = null;

            WebTestRequest request359 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request359.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request359.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request359.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request359.QueryStringParameters.Add("format", "json", false, false);
            request359.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:31-0400", false, false);
            yield return request359;
            request359 = null;

            WebTestRequest request360 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d7e973bd-6fc2-4984-83ea-6a7c80f332b2/childre" +
                    "n");
            request360.ThinkTime = 4;
            request360.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request360.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request360.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request360.QueryStringParameters.Add("format", "json", false, false);
            request360.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:32-0400", false, false);
            request360.QueryStringParameters.Add("children", "true", false, false);
            request360.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request360.QueryStringParameters.Add("includeSource", "true", false, false);
            request360.QueryStringParameters.Add("levels", "2", false, false);
            request360.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request360;
            request360 = null;

            WebTestRequest request361 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request361.Method = "POST";
            request361.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request361.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request361.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request361.QueryStringParameters.Add("format", "json", false, false);
            request361.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:36-0400", false, false);
            StringHttpBody request361Body = new StringHttpBody();
            request361Body.ContentType = "application/json;charset=utf-8";
            request361Body.InsertByteOrderMark = false;
            request361Body.BodyString = "{\"detailFltId\":\"e62101ca-d150-4ded-95e3-3b4f0ffb7672\",\"answers\":[{\"detailFltId\":\"" +
                "6cf0e9b1-0678-4b32-860e-1fad3baa08ff\"}]}";
            request361.Body = request361Body;
            yield return request361;
            request361 = null;

            WebTestRequest request362 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request362.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request362.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request362.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request362.QueryStringParameters.Add("format", "json", false, false);
            request362.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:36-0400", false, false);
            yield return request362;
            request362 = null;

            WebTestRequest request363 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/6cf0e9b1-0678-4b32-860e-1fad3baa08ff/childre" +
                    "n");
            request363.ThinkTime = 4;
            request363.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request363.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request363.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request363.QueryStringParameters.Add("format", "json", false, false);
            request363.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:37-0400", false, false);
            request363.QueryStringParameters.Add("children", "true", false, false);
            request363.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request363.QueryStringParameters.Add("includeSource", "true", false, false);
            request363.QueryStringParameters.Add("levels", "2", false, false);
            request363.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request363;
            request363 = null;

            WebTestRequest request364 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request364.Method = "POST";
            request364.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request364.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request364.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request364.QueryStringParameters.Add("format", "json", false, false);
            request364.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:40-0400", false, false);
            StringHttpBody request364Body = new StringHttpBody();
            request364Body.ContentType = "application/json;charset=utf-8";
            request364Body.InsertByteOrderMark = false;
            request364Body.BodyString = "{\"detailFltId\":\"4a6ce527-a149-4ce2-b193-28822f0e06cf\",\"answers\":[{\"detailFltId\":\"" +
                "d02d3731-4aa8-41ac-8754-fa0d14fb7693\"}]}";
            request364.Body = request364Body;
            yield return request364;
            request364 = null;

            WebTestRequest request365 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request365.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request365.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request365.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request365.QueryStringParameters.Add("format", "json", false, false);
            request365.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:40-0400", false, false);
            yield return request365;
            request365 = null;

            WebTestRequest request366 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/d02d3731-4aa8-41ac-8754-fa0d14fb7693/childre" +
                    "n");
            request366.ThinkTime = 3;
            request366.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request366.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request366.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request366.QueryStringParameters.Add("format", "json", false, false);
            request366.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:41-0400", false, false);
            request366.QueryStringParameters.Add("children", "true", false, false);
            request366.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request366.QueryStringParameters.Add("includeSource", "true", false, false);
            request366.QueryStringParameters.Add("levels", "2", false, false);
            request366.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request366;
            request366 = null;

            WebTestRequest request367 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request367.Method = "POST";
            request367.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request367.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request367.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request367.QueryStringParameters.Add("format", "json", false, false);
            request367.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:44-0400", false, false);
            StringHttpBody request367Body = new StringHttpBody();
            request367Body.ContentType = "application/json;charset=utf-8";
            request367Body.InsertByteOrderMark = false;
            request367Body.BodyString = "{\"detailFltId\":\"93023d95-fd48-4c03-b97a-1229c4e6660b\",\"answers\":[{\"detailFltId\":\"" +
                "bd2b505e-d806-4d4a-a8b4-d1ecdf9a4b94\"}]}";
            request367.Body = request367Body;
            yield return request367;
            request367 = null;

            WebTestRequest request368 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request368.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request368.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request368.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request368.QueryStringParameters.Add("format", "json", false, false);
            request368.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:44-0400", false, false);
            yield return request368;
            request368 = null;

            WebTestRequest request369 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/nodes/bd2b505e-d806-4d4a-a8b4-d1ecdf9a4b94/childre" +
                    "n");
            request369.ThinkTime = 3;
            request369.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request369.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request369.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request369.QueryStringParameters.Add("format", "json", false, false);
            request369.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:44-0400", false, false);
            request369.QueryStringParameters.Add("children", "true", false, false);
            request369.QueryStringParameters.Add("includeAdditions", "true", false, false);
            request369.QueryStringParameters.Add("includeSource", "true", false, false);
            request369.QueryStringParameters.Add("levels", "2", false, false);
            request369.QueryStringParameters.Add("parentFoodFltId", "70997f50-d64a-4b10-a48d-91ab60363ca9", false, false);
            yield return request369;
            request369 = null;

            WebTestRequest request370 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/meals" +
                    "/362355a5-0408-4ea4-b5d1-65eb55e152af/foods/c4d2c1d2-d704-404e-9329-ab6ef1b62221" +
                    "/details");
            request370.Method = "POST";
            request370.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request370.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request370.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request370.QueryStringParameters.Add("format", "json", false, false);
            request370.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:48-0400", false, false);
            StringHttpBody request370Body = new StringHttpBody();
            request370Body.ContentType = "application/json;charset=utf-8";
            request370Body.InsertByteOrderMark = false;
            request370Body.BodyString = "{\"detailFltId\":\"e160b478-f6e0-4257-92ad-cd82590e63b3\",\"answers\":[{\"detailFltId\":\"" +
                "c5d102be-9503-4f40-a87a-8f0fbf71541a\"}]}";
            request370.Body = request370Body;
            yield return request370;
            request370 = null;

            WebTestRequest request371 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request371.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request371.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request371.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request371.QueryStringParameters.Add("format", "json", false, false);
            request371.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:48-0400", false, false);
            yield return request371;
            request371 = null;

            WebTestRequest request372 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/users/" + UserId + "/favorites");
            request372.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request372.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request372.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request372.QueryStringParameters.Add("fltType", "undefined", false, false);
            request372.QueryStringParameters.Add("format", "json", false, false);
            request372.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:48-0400", false, false);
            yield return request372;
            request372 = null;

            WebTestRequest request373 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request373.ThinkTime = 6;
            request373.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request373.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/details"));
            request373.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request373.QueryStringParameters.Add("format", "json", false, false);
            request373.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:48-0400", false, false);
            yield return request373;
            request373 = null;

            WebTestRequest request374 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId);
            request374.ThinkTime = 5;
            request374.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request374.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/review"));
            request374.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request374.QueryStringParameters.Add("format", "json", false, false);
            request374.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:57:55-0400", false, false);
            yield return request374;
            request374 = null;

            WebTestRequest request375 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/usualamount/completed");
            request375.Method = "POST";
            request375.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request375.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/amount-reported"));
            request375.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request375.QueryStringParameters.Add("format", "json", false, false);
            request375.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:58:00-0400", false, false);
            StringHttpBody request375Body = new StringHttpBody();
            request375Body.ContentType = "application/json;charset=utf-8";
            request375Body.InsertByteOrderMark = false;
            request375Body.BodyString = "{\"amountEaten\":\"Usual\"}";
            request375.Body = request375Body;
            yield return request375;
            request375 = null;

            WebTestRequest request376 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/submissionStatus/completed");
            request376.Method = "POST";
            request376.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request376.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/amount-reported"));
            request376.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request376.QueryStringParameters.Add("format", "json", false, false);
            request376.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:58:00-0400", false, false);
            StringHttpBody request376Body = new StringHttpBody();
            request376Body.ContentType = "";
            request376Body.InsertByteOrderMark = false;
            request376Body.BodyString = "";
            request376.Body = request376Body;
            yield return request376;
            request376 = null;

            WebTestRequest request377 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/recalls/" + RecallId + "/modul" +
                    "es/submissionStatus/completed");
            request377.ThinkTime = 5;
            request377.Method = "POST";
            request377.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request377.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/amount-reported"));
            request377.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request377.QueryStringParameters.Add("format", "json", false, false);
            request377.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:58:00-0400", false, false);
            StringHttpBody request377Body = new StringHttpBody();
            request377Body.ContentType = "";
            request377Body.InsertByteOrderMark = false;
            request377Body.BodyString = "";
            request377.Body = request377Body;
            yield return request377;
            request377 = null;

            WebTestRequest request378 = new WebTestRequest(EnvHelper.GetRootDomain() + "2016/auth/logout");
            request378.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/plain, */*"));
            request378.Headers.Add(new WebTestRequestHeader("Referer", EnvHelper.GetRootDomain() + "2016/view-profile/" + RecallId));
            request378.Headers.Add(new WebTestRequestHeader("Authorization", this.Context["token"].ToString()));
            request378.QueryStringParameters.Add("format", "json", false, false);
            request378.QueryStringParameters.Add("RequestDateTime", "2017-06-15T10:58:06-0400", false, false);
            yield return request378;
            request378 = null;
        }
    }
}
